{"version":3,"file":"static/js/546.3402f0ef.chunk.js","mappings":"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","sources":["components/Author/Author.jsx","components/ReadArticle/ReadArticle.jsx","lib/util.js","components/BlogCard/BlogCard.jsx","pages/Blogs/Blogs.jsx"],"sourcesContent":["import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"./Author.scss\";\n\n//  How to use\n// add the post contain the author in data prop\n\nexport default function Author(props) {\n  const author = props.author?.node;\n  const authorNameString =\n    author?.firstName || author?.lastName\n      ? `${author?.firstName ? author?.firstName : \"\"} ${\n          author?.lastName ? author?.lastName : \"\"\n        }`\n      : author?.name\n      ? `@${author?.username}`\n      : \"\";\n\n  const authorAvatarUrl = author?.avatar.url;\n\n  const authorName = authorNameString ? (\n    authorNameString\n  ) : (\n    <Skeleton width={100} />\n  );\n\n  const authorTitle = author ? (\n    author?.roles?.nodes[0]?.displayName\n  ) : (\n    <Skeleton width={75} />\n  );\n  return (\n    <div className={`author ${props.className ? props.className : \"\"}`}>\n      {author ? (\n        <div className=\"author__avatar\">\n          <img src={authorAvatarUrl} alt=\"author avatar\" />\n        </div>\n      ) : (\n        <Skeleton width={50} height={50} style={{ borderRadius: \"50%\" }} />\n      )}\n      <div className=\"author_info\">\n        <h4 className=\"author__name\">{authorName}</h4>\n        <p className=\"author__occupation\">{authorTitle}</p>\n      </div>\n    </div>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport \"./ReadArticle.scss\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as ArrowRight } from \"../../assets/images/arrow-right.svg\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { scrollTop } from \"../../lib/util\";\nexport default function ReadArticle({ to, loading }) {\n \n  return (\n    <Link className=\"read_article\" to={to} onClick={scrollTop}>\n      {!loading ? (\n        <Fragment>\n          <span>Read Article</span>\n          <ArrowRight className=\"read_article__arrow\" />\n        </Fragment>\n      ) : (\n        <Skeleton width={100} />\n      )}\n    </Link>\n  );\n}\n","const navigateToHomePage = () => {\n    window.location.href = \"/\";\n}\nconst scrollIntoViewWithOffset = (element, offset) => {\n    window.scrollTo({\n      behavior: \"smooth\",\n      top:\n        element.getBoundingClientRect().top -\n        document.body.getBoundingClientRect().top -\n        offset,\n    });\n  };\n\n\n  const convertToSlug = (text) => {\n    return text.toLowerCase().split(\" \").join(\"-\");\n  };\n\n  const scrollTop = () => {\n    window.scrollTo(0, 0);\n  };\nexport {navigateToHomePage, scrollIntoViewWithOffset, convertToSlug, scrollTop};","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { Link } from \"react-router-dom\";\nimport { scrollTop } from \"../../lib/util\";\nimport ReadArticle from \"../ReadArticle/ReadArticle\";\nimport \"./BlogCard.scss\";\n\nconst Blog = ({ blog, className, loading }) => {\n  const author = blog?.author?.node;\n  const authorNameString =\n    author?.firstName || author?.lastName\n      ? `${author?.firstName ? author?.firstName : \"\"} ${\n          author?.lastName ? author?.lastName : \"\"\n        }`\n      : author?.name\n      ? `@${author?.username}`\n      : \"\";\n\n  const authorImage = author?.avatar?.url;\n\n  const authorName = blog ? authorNameString : <Skeleton width={100} />;\n\n  const firstParagraph = blog?.content?.split(\"</p>\")[0].split(\"<p>\")[1];\n  const story = blog ? (\n    blog?.categories?.nodes[0].name\n  ) : (\n    <Skeleton width={75} />\n  );\n  const time = blog ? (\n    new Intl.DateTimeFormat(\"en-US\", {\n      month: \"short\",\n      year: \"numeric\",\n      day: \"2-digit\",\n    }).format(new Date(blog?.date))\n  ) : (\n    <Skeleton width={80} />\n  );\n  const title = blog ? blog?.title : <Skeleton width={\"75%\"} />;\n\n  const link = `/blogs/${blog?.slug}`;\n\n  return (\n    <div className={`post ${className}`}>\n      {blog ? (\n        <Link to={link} onClick={scrollTop}>\n          <img\n            className=\"post__image\"\n            src={blog?.featuredImage?.node?.sourceUrl}\n            alt=\"blog sample\"\n          />\n        </Link>\n      ) : (\n        <Skeleton className=\"post__image\" />\n      )}\n      <div className=\"post__category-box\">\n        <p className=\"post__name section_name post__name--blue\">{story}</p>\n        <p className=\"post__date\">{time}</p>\n      </div>\n      <h2 className=\"post__title\">\n        <Link className=\"link--black\" to={link} onClick={scrollTop}>\n          {title}\n        </Link>\n      </h2>\n\n      {blog ? (\n        <p\n          className=\"post__summary\"\n          dangerouslySetInnerHTML={{ __html: firstParagraph }}\n        ></p>\n      ) : (\n        <p className=\"post__summary\">\n          <Skeleton />\n          <Skeleton width={\"75%\"} />\n        </p>\n      )}\n\n      <div className=\"post__author\">\n        {blog ? (\n          <img\n            className=\"post__author-image\"\n            src={authorImage}\n            alt={authorName}\n          />\n        ) : (\n          <Skeleton className=\"post__author-image\" />\n        )}\n        <p className=\"post__author-name\">{authorName}</p>\n      </div>\n      <ReadArticle loading={loading} to={link} />\n    </div>\n  );\n};\n\nexport default Blog;\n","import React, { Fragment, useState } from \"react\";\nimport \"./Blogs.scss\";\nimport ReadArticle from \"../../components/ReadArticle/ReadArticle\";\nimport SectionTriangleRight from \"../../components/SectionTriangleRight/SectionTriangleRight\";\nimport Author from \"../../components/Author/Author\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_CATEGORIES, GET_POSTS } from \"../../lib/graphqlQuery\";\nimport Button from \"../../components/Button/Button\";\nimport BlogCard from \"../../components/BlogCard/BlogCard\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { Link } from \"react-router-dom\";\nimport { scrollTop } from \"../../lib/util\";\n\nexport default function Blogs() {\n  const [chip, setChip] = useState(\"all\");\n\n  const { loading, data } = useQuery(GET_CATEGORIES);\n\n  const categories = !loading\n    ? data?.categories?.nodes\n    : Array.from({ length: 3 });\n\n  const handleRadioChange = (event) => {\n    setChip(event.target.id);\n  };\n\n  return (\n    <main className=\"blogs\">\n      <section className=\"hero\" background=\"light\">\n        <div className=\"container\">\n          <div className=\"hero_blog\">\n            <div className=\"hero_blog__wrapper\">\n              <HeroBlogInfo />\n            </div>\n          </div>\n        </div>\n        <div className=\"hero_graphic\">\n          <div className=\"hero_graphic__item hero_graphic__item--blue\"></div>\n          <div className=\"hero_graphic__item hero_graphic__item--green\"></div>\n        </div>\n      </section>\n\n      <section className=\"posts\">\n        <div className=\"container\">\n          <div className=\"chips\">\n            {categories.map((category, index) =>\n              category?.slug !== \"uncategorised\" ? (\n                <Chip\n                  category={category}\n                  key={index}\n                  onChange={handleRadioChange}\n                  checked={chip.toLowerCase() === category?.slug}\n                />\n              ) : (\n                \"\"\n              )\n            )}\n          </div>\n\n          <BlogsView chip={chip} />\n        </div>\n        <SectionTriangleRight variant=\"footer\" />\n      </section>\n    </main>\n  );\n}\n\nconst Chip = ({ category, onChange, checked }) => {\n  return category ? (\n    category?.node?.slug !== \"uncategorised\" && (\n      <div className=\"chip\">\n        <input\n          id={category?.name}\n          type=\"radio\"\n          name=\"radio\"\n          onChange={onChange}\n          checked={checked}\n        />\n        <label htmlFor={category?.name}>{category?.name}</label>\n      </div>\n    )\n  ) : (\n    <Fragment>\n      <Skeleton width={100} height={33} style={{ borderRadius: \"20px\" }} />\n    </Fragment>\n  );\n};\n\nconst HeroBlogInfo = () => {\n  const { loading, data } = useQuery(GET_POSTS, {\n    variables: { first: 1, after: null },\n    fetchPolicy: \"no-cache\",\n  });\n\n  const blog = data?.posts?.nodes[0];\n\n  const headline = !loading ? \"BLOG TODAYS\" : <Skeleton width={100} />;\n  const title = !loading ? (\n    blog?.title\n  ) : (\n    <Fragment>\n      <Skeleton />\n      <Skeleton width={\"75%\"} />\n    </Fragment>\n  );\n\n  const slug = blog?.slug;\n  const link = `/blogs/${slug}`;\n\n  // Get the first paragraph of the blog\n  const parser = new DOMParser();\n  const firstParagraph = blog ? (\n    parser.parseFromString(blog?.content, \"text/html\").querySelector(\"p\")\n      .innerText\n  ) : (\n    <Fragment>\n      <Skeleton count={2} />\n      <Skeleton width={\"75%\"} />\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <div className=\"hero_blog__image\">\n        {!loading ? (\n          <Link to={link} onClick={scrollTop}>\n            <img src={blog?.featuredImage?.node?.sourceUrl} alt=\"blog hero\" />\n          </Link>\n        ) : (\n          <Skeleton height={380} style={{ borderRadius: \"20px\" }} />\n        )}\n      </div>\n      <div className=\"hero_blog__content\">\n        <div className=\"hero_blog__content-box\">\n          <p className=\"section_name hero_blog__name\">{headline}</p>\n          <h1 className=\"hero_blog__title section_title\">\n            <Link className=\"link--black\" to={link} onClick={scrollTop}>\n              {title}\n            </Link>\n          </h1>\n\n          <p className=\"hero_blog__summary section__description\">\n            {firstParagraph}\n          </p>\n\n          <ReadArticle id={blog?.id} loading={loading} to={link} />\n        </div>\n\n        <Author author={blog?.author} />\n      </div>\n    </Fragment>\n  );\n};\n\nconst BlogsView = ({ chip }) => {\n  const batchSize = 8;\n  // get the first post to get the cursor for the first batch of posts\n  const { data: firstPost } = useQuery(GET_POSTS, {\n    variables: {\n      first: 1,\n    },\n  });\n\n  // get the rest of the posts\n  const { loading, data, fetchMore } = useQuery(GET_POSTS, {\n    variables: {\n      first: batchSize,\n      after: firstPost?.posts?.pageInfo.endCursor,\n    },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  // show only posts that have the selected category\n  let posts = !loading ? data?.posts?.nodes : Array.from({ length: 8 });\n  const postInfo = data?.posts?.pageInfo;\n\n  if (chip.toLowerCase() !== \"all\") {\n    // set posts to only posts that have the selected category\n    posts = posts?.filter((post) => {\n      const categories = post?.categories?.nodes.map((node) => node.name);\n      return categories.includes(chip);\n    });\n  }\n\n  return (\n    <Fragment>\n      <div className=\"posts_view\">\n        {posts.map((post, index) => (\n          <BlogCard key={index} blog={post} loading={loading} />\n        ))}\n      </div>\n      <div className=\"view_more\">\n        {postInfo?.hasNextPage ? (\n          <Button\n            text={loading ? \"Loading...\" : \"View all posts\"}\n            type=\"arrow outline\"\n            arrowVariant=\"down\"\n            color=\"green\"\n            disabled={loading}\n            onClick={(e) => {\n              e.preventDefault();\n              fetchMore({\n                variables: {\n                  first: batchSize,\n                  after: data?.posts?.pageInfo?.endCursor,\n                },\n                updateQuery: (prev, { fetchMoreResult }) => {\n                  if (!fetchMoreResult) return prev;\n                  return {\n                    ...prev,\n                    posts: {\n                      ...prev?.posts,\n                      ...fetchMoreResult?.posts,\n                      nodes: [\n                        ...prev?.posts?.nodes,\n                        ...fetchMoreResult.posts.nodes,\n                      ],\n                    },\n                  };\n                },\n              });\n            }}\n          />\n        ) : (\n          <p>All posts loaded.</p>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n"],"names":["Author","props","_props$author","_author$roles","_author$roles$nodes$","author","node","authorNameString","firstName","lastName","concat","name","username","authorAvatarUrl","avatar","url","authorName","_jsx","Skeleton","width","authorTitle","roles","nodes","displayName","_jsxs","className","children","src","alt","height","style","borderRadius","ReadArticle","_ref","to","loading","Link","onClick","scrollTop","Fragment","ArrowRight","scrollIntoViewWithOffset","element","offset","window","scrollTo","behavior","top","getBoundingClientRect","document","body","convertToSlug","text","toLowerCase","split","join","_blog$author","_author$avatar","_blog$content","_blog$categories","_blog$featuredImage","_blog$featuredImage$n","blog","authorImage","firstParagraph","content","story","categories","time","Intl","DateTimeFormat","month","year","day","format","Date","date","title","link","slug","featuredImage","sourceUrl","dangerouslySetInnerHTML","__html","Blogs","_data$categories","_useState","useState","_useState2","_slicedToArray","chip","setChip","_useQuery","useQuery","GET_CATEGORIES","data","Array","from","length","handleRadioChange","event","target","id","background","HeroBlogInfo","map","category","index","Chip","onChange","checked","BlogsView","SectionTriangleRight","variant","_category$node","type","htmlFor","_data$posts","_useQuery2","GET_POSTS","variables","first","after","fetchPolicy","posts","headline","parser","DOMParser","parseFromString","querySelector","innerText","count","_ref2","_firstPost$posts","_data$posts2","_data$posts3","_posts","firstPost","_useQuery4","pageInfo","endCursor","notifyOnNetworkStatusChange","fetchMore","postInfo","filter","post","_post$categories","includes","BlogCard","hasNextPage","Button","arrowVariant","color","disabled","e","_data$posts4","_data$posts4$pageInfo","preventDefault","updateQuery","prev","_ref3","_prev$posts","fetchMoreResult","_objectSpread","_toConsumableArray"],"sourceRoot":""}