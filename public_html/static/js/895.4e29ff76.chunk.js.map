{"version":3,"file":"static/js/895.4e29ff76.chunk.js","mappings":"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","sources":["components/Author/Author.jsx","components/LatestBlogs/LatestBlogs.jsx","components/ReadArticle/ReadArticle.jsx","components/RelatedCard/RelatedCard.jsx","pages/BlogDetails/BlogDetails.jsx"],"sourcesContent":["import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"./Author.scss\";\n\n//  How to use\n// add the post contain the author in data prop\n\nexport default function Author(props) {\n  const author = props.author?.node;\n  const authorNameString =\n    author?.firstName || author?.lastName\n      ? `${author?.firstName ? author?.firstName : \"\"} ${\n          author?.lastName ? author?.lastName : \"\"\n        }`\n      : author?.name\n      ? `@${author?.username}`\n      : \"\";\n\n  const authorAvatarUrl = author?.avatar.url;\n\n  const authorName = authorNameString ? (\n    authorNameString\n  ) : (\n    <Skeleton width={100} />\n  );\n\n  const authorTitle = author ? (\n    author?.roles?.nodes[0]?.displayName\n  ) : (\n    <Skeleton width={75} />\n  );\n  return (\n    <div className={`author ${props.className ? props.className : \"\"}`}>\n      {author ? (\n        <div className=\"author__avatar\">\n          <img src={authorAvatarUrl} alt=\"author avatar\" />\n        </div>\n      ) : (\n        <Skeleton width={50} height={50} style={{ borderRadius: \"50%\" }} />\n      )}\n      <div className=\"author_info\">\n        <h4 className=\"author__name\">{authorName}</h4>\n        <p className=\"author__occupation\">{authorTitle}</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"../Button/Button\";\nimport RelatedCard from \"../RelatedCard/RelatedCard\";\nimport \"./LatestBlogs.scss\";\nimport { useQuery } from \"@apollo/client\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport { GET_RECOMMENDED_POSTS } from '../../lib/graphqlQuery'\n\n// import card1 from \"../../assets/images/card1.png\";\n// import card2 from \"../../assets/images/card2.png\";\n// import card3 from \"../../assets/images/card3.png\";\nimport { GET_BLOGS } from \"../../lib/graphqlQuery\";\n\nexport default function LatestBlogs({ triangleColor }) {\n  const { loading, data } = useQuery(GET_BLOGS, {\n    variables: {\n      first: 4,\n    },\n  });\n\n  const blogs = !loading ? data?.posts?.nodes : Array.from({ length: 4 });\n  return (\n    <section className=\"platform background--dark-blue platform__title--white\">\n      <div className=\"container platform__container\">\n        <div className=\"platform__top\">\n          <div className=\"platform__top-left\">\n            <p className=\"platform__name platform__name--green section_name\">\n              PAXFORM BLOG\n            </p>\n            <h2 className=\"platform__title section_title\">\n              Latest Blog’s from Paxform.\n            </h2>\n          </div>\n          <div className=\"platform__top-right\">\n            <Button type=\"outline arrow\" text=\"See All Blog Post\" />\n          </div>\n        </div>\n        <div className=\"platform__content\">\n          {blogs.map((blog, index) => (\n            <RelatedCard\n              key={index}\n              data={blog}\n              readLink={true}\n              background=\"dark\"\n              term=\"blogs\"\n              loading={loading}\n            />\n          ))}\n        </div>\n      </div>\n      <div\n        className={`bottom_triangle bottom_triangle--${triangleColor}`}\n      ></div>\n    </section>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport \"./ReadArticle.scss\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as ArrowRight } from \"../../assets/images/arrow-right.svg\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { scrollTop } from \"../../lib/util\";\nexport default function ReadArticle({ to, loading }) {\n \n  return (\n    <Link className=\"read_article\" to={to} onClick={scrollTop}>\n      {!loading ? (\n        <Fragment>\n          <span>Read Article</span>\n          <ArrowRight className=\"read_article__arrow\" />\n        </Fragment>\n      ) : (\n        <Skeleton width={100} />\n      )}\n    </Link>\n  );\n}\n","import Skeleton from \"react-loading-skeleton\";\nimport ReadArticle from \"../ReadArticle/ReadArticle\";\nimport \"./RelatedCard.scss\";\n\nconst RelatedCard = ({\n  data,\n  readLink,\n  className,\n  loading,\n  term,\n  background,\n  colorMap,\n}) => {\n  const parser = new DOMParser();\n\n  const category = data ? (\n    data?.resourceCategories?.nodes[0]?.name\n  ) : (\n    <Skeleton width={\"50%\"} />\n  );\n  const title = data ? data?.title : <Skeleton count={2} />;\n  const slug = data?.slug;\n  const description = data ? (\n    parser\n      .parseFromString(data?.content, \"text/html\")\n      .getElementsByTagName(\"p\")[0]?.innerText\n  ) : (\n    <Skeleton count={3} />\n  );\n  const image = data?.featuredImage?.node?.sourceUrl;\n\n  const to = `/${term}/${slug}`;\n\n  const readArticle = !loading ? (\n    <ReadArticle to={to} />\n  ) : (\n    <Skeleton width={\"75%\"} />\n  );\n\n  const categoryColor = data ? colorMap?.get(category) : \"\";\n\n  const titleVariant = background ? `related_card__title--${background}` : \"\";\n  return (\n    <div className=\"related_card\">\n      <div className=\"related_card__top\">\n        {image ? (\n          <div className={`${className ? className : \"\"} related_card__image`}>\n            <a href={to}><img src={image} alt=\"first story\" /></a>\n          </div>\n        ) : (\n          <Skeleton height={180} style={{ borderRadius: \"20px\" }} />\n        )}\n\n        {category ? <p className=\"related_card__category\" style={{color: categoryColor}}>{category}</p> : \"\"}\n\n        {title ? (\n          <h2 className={`related_card__title ${titleVariant}`}>\n            <a className=\"related_card__title-link\" href={to}>\n              {title}\n            </a>\n          </h2>\n        ) : (\n          \"\"\n        )}\n        {description ? (\n          <p className=\"related_card__description\">{description}</p>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"related_card__bottom\">{readLink ? readArticle : \"\"}</div>\n    </div>\n  );\n};\n\nexport default RelatedCard;\n\n\n","import \"./BlogDetails.scss\";\nimport { useLocation } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_BLOG_DETAILS, GET_RELATED_POST } from \"../../lib/graphqlQuery\";\nimport Author from \"../../components/Author/Author\";\nimport RelatedCard from \"../../components/RelatedCard/RelatedCard\";\nimport ShareToSocialMedias from \"../../components/ShareToSocialMedias/ShareToSocialMedias\";\nimport LatestBlogs from \"../../components/LatestBlogs/LatestBlogs\";\nimport SectionTriangleRight from \"../../components/SectionTriangleRight/SectionTriangleRight\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\n\nconst BlogDetails = () => {\n  // Current Blog Slug\n  const slug = useLocation().pathname.split(\"/\").pop();\n  // Querying Current Blog\n  const { loading, data } = useQuery(GET_BLOG_DETAILS, {\n    variables: { slug },\n  });\n  // Querying other posts to get related blogs\n  const { loading: loadingPosts, data: dataPosts } = useQuery(\n    GET_RELATED_POST,\n    {\n      variables: {\n        categoryName: data?.post?.categories?.nodes[0]?.name ?? \"\",\n      },\n    }\n  );\n\n  // -> Extracting the related blogs\n  // Displaying 2 skeletons while loading\n  const relatedBlogsLoading = () => {\n    let relatedBlogs = [];\n    for (let i = 0; i < 2; i++) {\n      relatedBlogs.push(\n        <div key={i} style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Skeleton height=\"250px\" borderRadius=\"20px\" />\n          <div>\n            <p>\n              <Skeleton count={1} width=\"50%\" />\n            </p>\n            <h2>\n              <Skeleton count={1} />\n            </h2>\n            <p>\n              <Skeleton count={2} />\n            </p>\n          </div>\n        </div>\n      );\n    }\n    return relatedBlogs;\n  };\n\n  // Posts finished loading\n  const relatedBlogsLoaded = () => {\n    let relatedBlogs = [];\n    // All the posts nodes\n    const postsNodes = dataPosts?.posts?.nodes;\n    // Current post category\n    const currentCategory = data?.post?.categories?.nodes[0]?.name ?? \"\";\n    // Filtering all the posts to get posts from the same category as the current post\n    const categoryBlogs = postsNodes?.filter((node) => {\n      return (\n        node?.slug !== slug &&\n        node?.categories?.nodes[0]?.name === currentCategory\n      );\n    });\n\n    // Shuffling the posts to pick random ones\n    const shuffledBlogs = [...categoryBlogs].sort(() => 0.5 - Math.random());\n    // Picking 2 random posts\n    const recommendedBlogs = shuffledBlogs.slice(0, 2);\n    // Looping through the recommended blogs array to pass the props to RealtedCard Component\n    recommendedBlogs.forEach((blog) => {\n      relatedBlogs.push(\n        <RelatedCard key={blog.id} term=\"blogs\" data={blog} readLink={true} />\n      );\n    });\n    return relatedBlogs;\n  };\n\n  // -> Current Blog Details\n  let authorNode, imgSrc, post;\n  if (!loading) {\n    post = data?.post;\n    authorNode = post?.author?.node;\n    imgSrc = post?.featuredImage?.node?.sourceUrl ?? \"\";\n  }\n\n  // Converting date format\n  const blogDate = () => {\n    let postDate = new Date(post?.date);\n    postDate = postDate.toLocaleString(\"en-US\", {\n      month: \"long\",\n      day: \"2-digit\",\n      year: \"numeric\",\n    });\n    return postDate;\n  };\n\n  const postDate = loading ? <Skeleton width=\"45%\" /> : blogDate();\n  const title = loading ? <Skeleton width=\"75%\" /> : post?.title ?? \"\";\n  const authorName = loading ? (\n    <Skeleton />\n  ) : (\n    `${authorNode?.firstName ?? \"\"} ${authorNode?.lastName ?? \"\"}`\n  );\n  const displayName = loading ? (\n    <Skeleton />\n  ) : (\n    authorNode?.roles?.nodes[0]?.displayName ?? \"\"\n  );\n  const authorAvatar = loading ? (\n    <Skeleton height=\"50px\" width=\"50px\" borderRadius=\"50%\" />\n  ) : (\n    <img\n      className=\"author__photo\"\n      src={authorNode?.avatar?.url}\n      alt=\"Author Avatar\"\n    />\n  );\n\n  const articleImage = loading ? (\n    <div className=\"article_info__img\">\n      <Skeleton height=\"100%\" borderRadius=\"20px\" />\n    </div>\n  ) : (\n    <img className=\"article_info__img\" src={imgSrc} alt=\"Article\" />\n  );\n\n  const article = loading ? (\n    <div style={{ marginTop: \"35px\" }}>\n      <h2>\n        <Skeleton count={1} width=\"75%\" />\n      </h2>\n      <p>\n        <Skeleton count={5} />\n      </p>\n      <p>\n        <Skeleton count={5} />\n      </p>\n      <p>\n        <Skeleton count={5} />\n      </p>\n      <p>\n        <Skeleton count={5} />\n      </p>\n      <p>\n        <Skeleton count={5} />\n      </p>\n    </div>\n  ) : (\n    <div\n      className=\"article_detail\"\n      style={{ marginTop: \"35px\" }}\n      dangerouslySetInnerHTML={{ __html: post?.content }}\n    ></div>\n  );\n\n  const relatedPosts =\n    !loading && !loadingPosts ? relatedBlogsLoaded() : relatedBlogsLoading();\n\n  return (\n    <>\n      <div className=\"container hero\" background=\"light\">\n        <main className=\"blog_details__main\">\n          <section className=\"article_info\">\n            <div className=\"article_info__date section_name\">{postDate}</div>\n            <h1 className=\"article_info__title\">{title}</h1>\n            {articleImage}\n          </section>\n          <Author\n            className=\"author--blog-detail\"\n            avatar={authorAvatar}\n            name={authorName}\n            displayName={displayName}\n            author={post?.author}\n          />\n          <div className=\"article\">{article}</div>\n          <div className=\"share\">\n            <ShareToSocialMedias\n              slug={slug}\n              title={title}\n              term=\"blogs\"\n              imageUrl={articleImage}\n              className=\"blog-details-social\"\n            />\n          </div>\n          <section className=\"recommended\">\n            <p className=\"recommended__title section_name\">Recommended</p>\n            <div className=\"recommended_container\">{relatedPosts}</div>\n          </section>\n        </main>\n      </div>\n      <div className=\"latest_blogs__container\">\n        <SectionTriangleRight variant=\"dark-blue\" />\n        <LatestBlogs triangleColor=\"light-blue\" />\n      </div>\n      <div className=\"footer_triangle\">\n        <SectionTriangleRight variant=\"light-blue\" />\n      </div>\n    </>\n  );\n};\n\nexport default BlogDetails;\n"],"names":["Author","props","_props$author","_author$roles","_author$roles$nodes$","author","node","authorNameString","firstName","lastName","concat","name","username","authorAvatarUrl","avatar","url","authorName","_jsx","Skeleton","width","authorTitle","roles","nodes","displayName","_jsxs","className","children","src","alt","height","style","borderRadius","LatestBlogs","_ref","_data$posts","triangleColor","_useQuery","useQuery","GET_BLOGS","variables","first","loading","data","blogs","Array","from","length","posts","Button","type","text","map","blog","index","RelatedCard","readLink","background","term","ReadArticle","to","Link","onClick","scrollTop","Fragment","ArrowRight","_data$resourceCategor","_data$resourceCategor2","_parser$parseFromStri","_data$featuredImage","_data$featuredImage$n","colorMap","parser","DOMParser","category","resourceCategories","title","count","slug","description","parseFromString","content","getElementsByTagName","innerText","image","featuredImage","sourceUrl","readArticle","categoryColor","get","titleVariant","href","color","_data$post$categories","_data$post","_data$post$categories2","_data$post$categories3","_post$title","_post4","_authorNode$firstName","_authorNode","_authorNode$lastName","_authorNode2","_authorNode$roles$nod","_authorNode3","_authorNode3$roles","_authorNode3$roles$no","_authorNode4","_authorNode4$avatar","_post5","_post6","authorNode","imgSrc","post","_post","_post$author","_post$featuredImage$n","_post2","_post2$featuredImage","_post2$featuredImage$","useLocation","pathname","split","pop","GET_BLOG_DETAILS","_useQuery2","GET_RELATED_POST","categoryName","categories","loadingPosts","dataPosts","postDate","_post3","Date","date","toLocaleString","month","day","year","blogDate","authorAvatar","articleImage","article","marginTop","dangerouslySetInnerHTML","__html","relatedPosts","relatedBlogs","i","push","display","flexDirection","relatedBlogsLoading","_dataPosts$posts","_data$post$categories4","_data$post2","_data$post2$categorie","_data$post2$categorie2","postsNodes","currentCategory","categoryBlogs","filter","_node$categories","_node$categories$node","_toConsumableArray","sort","Math","random","slice","forEach","id","relatedBlogsLoaded","_Fragment","ShareToSocialMedias","imageUrl","SectionTriangleRight","variant"],"sourceRoot":""}