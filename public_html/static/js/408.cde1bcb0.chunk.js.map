{"version":3,"file":"static/js/408.cde1bcb0.chunk.js","mappings":"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","sources":["components/ReadArticle/ReadArticle.jsx","components/Author/Author.jsx","components/BlogCard/BlogCard.jsx","pages/Blogs/Blogs.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"./ReadArticle.scss\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as ArrowRight } from \"../../assets/images/arrow-right.svg\";\nexport default class ReadArticle extends Component {\n  render() {\n    return (\n      <Link className=\"read_article\" to={this.props.to}>\n        <span>Read Article</span>\n        <ArrowRight className=\"read_article__arrow\"/>\n      </Link>\n    );\n  }\n}\n","import React from \"react\";\nimport './Author.scss';\n\nexport default function Author(props) {\n  const author = props.author?.node;\n\n  return (\n    <div className=\"author\">\n      <div className=\"author__avatar\">\n        <img src={author?.avatar.url} alt=\"author avatar\" />\n      </div>\n      <div className=\"author_info\">\n        <h4 className=\"author__name\">{author?.firstName || author?.lastName ? `${author.firstName ? author.firstName : ''} ${author.lastName? author.lastName : ''}` : `@${author?.username}`}</h4>\n        <p className=\"author__occupation\">{author?.roles?.edges[0]?.node?.displayName}</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReadArticle from \"../ReadArticle/ReadArticle\";\nimport \"./BlogCard.scss\";\n\nconst Blog = (props) => {\n  const blog = props.blog;\n  const authorImage = blog.author.node.avatar.url;\n  const authorName =\n    blog.author.node.firstName +\n    (blog.author.node.lastName ? \" \" + blog.author.node.lastName : \"\");\n\n  const firstParagraph = blog.content.split(\"</p>\")[0].split(\"<p>\")[1];\n  return (\n    <div className={`post ${props.className}`}>\n      <img\n        className=\"post__image\"\n        src={blog.featuredImage.node.sourceUrl}\n        alt=\"blog sample\"\n      />\n      <div className=\"post__category-box\">\n        <p className=\"post__name section_name post__name--blue\">\n          {blog.categories.edges[0].node.name || \"Story\"}\n        </p>\n        <p className=\"post__date\">\n          {new Intl.DateTimeFormat(\"en-US\", {\n            month: \"short\",\n            year: \"numeric\",\n            day: \"2-digit\",\n          }).format(new Date(blog.date))}\n        </p>\n      </div>\n      <h2 className=\"post__title\">{blog.title}</h2>\n\n      <p\n        className=\"post__summary\"\n        dangerouslySetInnerHTML={{ __html: firstParagraph }}\n      ></p>\n\n      <div className=\"post__author\">\n        <img\n          className=\"post__author-image\"\n          src={authorImage}\n          alt={authorName}\n        />\n        <p className=\"post__author-name\">{authorName}</p>\n      </div>\n      <ReadArticle />\n    </div>\n  );\n};\n\nexport default Blog;\n","import React, { Component, Fragment, Suspense } from \"react\";\nimport \"./Blogs.scss\";\nimport ReadArticle from \"../../components/ReadArticle/ReadArticle\";\nimport SectionTriangleRight from \"../../components/SectionTriangleRight/SectionTriangleRight\";\nimport Author from \"../../components/Author/Author\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_CATEGORIES, GET_POSTS } from \"../../lib/graphqlQuery\";\nimport client from \"../../configurations/apollo\";\nimport Button from \"../../components/Button/Button\";\nimport BlogCard from \"../../components/BlogCard/BlogCard\";\n\nexport default class Blogs extends Component {\n  blogs = { chip: \"all\", categories: [] };\n\n  constructor(props) {\n    super(props);\n\n    this.state = this.blogs;\n    this.handleRadioChange = this.handleRadioChange.bind(this);\n  }\n\n  async componentDidMount() {\n    // this.handleResize();\n    // window.addEventListener(\"resize\", this.handleResize);\n    await this.getCategories();\n  }\n\n  componentWillUnmount() {\n    // window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  // handleResize() {\n  //   const heroBlog = document.querySelector(\".hero_blog\");\n  //   const heroBlogWrapper = document.querySelector(\".hero_blog__wrapper\");\n\n  //   heroBlog.style.height =\n  //     parseInt(window.getComputedStyle(heroBlogWrapper).height.split(\"px\")) -\n  //     92 +\n  //     \"px\";\n  // }\n\n  handleRadioChange(event) {\n    this.blogs.chip = event.target.id;\n    this.setState(this.blogs);\n  }\n\n  async getCategories() {\n    const categories = await client.query({ query: GET_CATEGORIES });\n    this.blogs.categories = categories.data.categories.edges;\n    this.setState(this.blogs);\n  }\n\n  render() {\n    return (\n      <Suspense>\n        <main className=\"blogs\">\n          <section className=\"hero\" background=\"light\">\n            <div className=\"container\">\n              <div className=\"hero_blog\">\n                <div className=\"hero_blog__wrapper\">\n                  <HeroBlogInfo />\n                </div>\n                <div className=\"hero_graphic\"></div>\n              </div>\n            </div>\n            <SectionTriangleRight variant=\"white\" />\n          </section>\n\n          <section className=\"posts\">\n            <div className=\"container\">\n              <div className=\"chips\">\n                {this.state.categories.map(\n                  (category, index) =>\n                    category.node.name.toLowerCase() !== \"uncategorised\" && (\n                      <div className=\"chip\" key={index}>\n                        <input\n                          id={category.node.name}\n                          type=\"radio\"\n                          name=\"radio\"\n                          onChange={this.handleRadioChange}\n                          checked={\n                            this.state.chip.toLowerCase() ===\n                            category.node.name.toLowerCase()\n                          }\n                        />\n                        <label htmlFor={category.node.name}>\n                          {category.node.name}\n                        </label>\n                      </div>\n                    )\n                )}\n              </div>\n\n              <BlogsView chip={this.state.chip} />\n            </div>\n            <SectionTriangleRight variant=\"footer\" />\n          </section>\n        </main>\n      </Suspense>\n    );\n  }\n}\n\nconst HeroBlogInfo = () => {\n  const { loading, error, data } = useQuery(GET_POSTS, {\n    variables: { first: 1, after: null },\n    fetchPolicy: \"no-cache\",\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ErrorL {error}</p>;\n\n  const blog = data.posts.edges[0].node;\n\n  // Get the first paragraph of the blog\n  const firstParagraph = blog.content.split(\"</p>\")[0].split(\"<p>\")[1];\n\n  return (\n    <Fragment>\n      <div className=\"hero_blog__image\">\n        <img src={blog.featuredImage.node.sourceUrl} alt=\"blog hero\" />\n      </div>\n      <div className=\"hero_blog__content\">\n        <div className=\"hero_blog__content-box\">\n          <p className=\"section_name hero_blog__name\">BLOG TODAYS</p>\n          <h1 className=\"hero_blog__title\">{blog.title}</h1>\n          <p\n            className=\"hero_blog__summary\"\n            dangerouslySetInnerHTML={{\n              __html: firstParagraph,\n            }}\n          ></p>\n          <ReadArticle id={blog.id} />\n        </div>\n\n        <Author author={blog.author} />\n      </div>\n    </Fragment>\n  );\n};\n\nconst BlogsView = (props) => {\n  const batchSize = 8;\n  // get the first post to get the cursor for the first batch of posts\n  const { data: firstPost } = useQuery(GET_POSTS, {\n    variables: {\n      first: 1,\n    },\n  });\n\n  // get the rest of the posts\n  const { loading, error, data, fetchMore } = useQuery(GET_POSTS, {\n    variables: {\n      first: batchSize,\n      after: firstPost?.posts?.pageInfo.endCursor,\n    },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  if (!data && loading) return <p>Loading...</p>;\n\n  if (error) return <p>An error occured</p>;\n\n  if (!data) {\n    return <p>No posts yet</p>;\n  }\n\n  // show only posts that have the selected category\n  let posts = data.posts.edges.map((edge) => edge.node);\n  const postInfo = data.posts.pageInfo;\n\n  if (props.chip.toLowerCase() !== \"all\") {\n    // set posts to only posts that have the selected category\n    posts = posts.filter((post) => {\n      const categories = post.categories.edges.map((edge) => edge.node.name);\n      return categories.includes(props.chip);\n    });\n  }\n\n  return (\n    <Fragment>\n      <div className=\"posts_view\">\n        {posts.map((post, index) => (\n          <BlogCard key={index} blog={post} />\n        ))}\n      </div>\n      <div className=\"view_more\">\n        {postInfo.hasNextPage ? (\n          <Button\n            text={loading ? \"Loading...\" : \"View all posts\"}\n            type=\"arrow outline\"\n            arrowVariant=\"down\"\n            color=\"green\"\n            disabled={loading}\n            onClick={(e) => {\n              e.preventDefault();\n              fetchMore({\n                variables: {\n                  first: batchSize,\n                  after: data.posts.pageInfo.endCursor,\n                },\n                updateQuery: (prev, { fetchMoreResult }) => {\n                  if (!fetchMoreResult) return prev;\n                  return {\n                    ...prev,\n                    posts: {\n                      ...prev.posts,\n                      ...fetchMoreResult.posts,\n                      edges: [\n                        ...prev.posts.edges,\n                        ...fetchMoreResult.posts.edges,\n                      ],\n                    },\n                  };\n                },\n              });\n            }}\n          />\n        ) : (\n          <p>All posts loaded.</p>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n"],"names":["ReadArticle","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsxs","Link","className","to","this","props","children","_jsx","ArrowRight","Component","Author","_props$author","_author$roles","_author$roles$edges$","_author$roles$edges$$","author","node","src","avatar","url","alt","firstName","lastName","concat","username","roles","edges","displayName","blog","authorImage","authorName","firstParagraph","content","split","featuredImage","sourceUrl","categories","name","Intl","DateTimeFormat","month","year","day","format","Date","date","title","dangerouslySetInnerHTML","__html","Blogs","_this","call","blogs","chip","state","handleRadioChange","bind","_assertThisInitialized","_componentDidMount","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getCategories","stop","event","target","id","setState","_getCategories","_callee2","_context2","client","query","GET_CATEGORIES","sent","data","_this2","Suspense","background","HeroBlogInfo","SectionTriangleRight","variant","map","category","index","toLowerCase","type","onChange","checked","htmlFor","BlogsView","_useQuery","useQuery","GET_POSTS","variables","first","after","fetchPolicy","loading","error","posts","Fragment","_firstPost$posts","firstPost","_useQuery3","pageInfo","endCursor","notifyOnNetworkStatusChange","fetchMore","edge","postInfo","filter","post","includes","BlogCard","hasNextPage","Button","text","arrowVariant","color","disabled","onClick","e","preventDefault","updateQuery","_ref","fetchMoreResult","_objectSpread","_toConsumableArray"],"sourceRoot":""}