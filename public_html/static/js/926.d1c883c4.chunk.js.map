{"version":3,"file":"static/js/926.d1c883c4.chunk.js","mappings":"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","sources":["components/LatestBlogs/LatestBlogs.jsx","components/ReadArticle/ReadArticle.jsx","components/RelatedCard/RelatedCard.jsx","components/ResourceCard/ResourceCard.jsx","assets/images/Resources/Shape header.svg","pages/Resources/Resources.jsx"],"sourcesContent":["import React from \"react\";\nimport Button from \"../Button/Button\";\nimport RelatedCard from \"../RelatedCard/RelatedCard\";\nimport \"./LatestBlogs.scss\";\nimport { useQuery } from \"@apollo/client\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\n\n// import card1 from \"../../assets/images/card1.png\";\n// import card2 from \"../../assets/images/card2.png\";\n// import card3 from \"../../assets/images/card3.png\";\nimport { GET_BLOGS } from \"../../lib/graphqlQuery\";\nimport { useTranslation } from \"react-i18next\";\nimport { queryLanguageCode } from \"../../lib/util\";\n\nexport default function LatestBlogs({ triangleColor }) {\n  const {t} = useTranslation();\n  const { loading, data } = useQuery(GET_BLOGS, {\n    variables: {\n      first: 4,\n      language: queryLanguageCode()\n    },\n  });\n\n  const blogs = !loading ? data?.posts?.nodes : Array.from({ length: 4 });\n  return (\n    <section className=\"platform background--dark-blue platform__title--white\">\n      <div className=\"container platform__container\">\n        <div className=\"platform__top\">\n          <div className=\"platform__top-left\">\n            <p className=\"platform__name platform__name--green section_name\">\n              {t(\"latestBlogs.name\")}\n            </p>\n            <h2 className=\"platform__title section_title\">\n              {t(\"latestBlogs.title\")}\n            </h2>\n          </div>\n          <div className=\"platform__top-right\">\n            <Button type=\"outline arrow\" text={t(\"latestBlogs.button\")} href='/blogs'/>\n          </div>\n        </div>\n        <div className=\"platform__content\">\n          {blogs.map((blog, index) => (\n            <RelatedCard\n              key={index}\n              data={blog}\n              readLink={true}\n              background=\"dark\"\n              term=\"blogs\"\n              loading={loading}\n            />\n          ))}\n        </div>\n      </div>\n      <div\n        className={`bottom_triangle bottom_triangle--${triangleColor}`}\n      ></div>\n    </section>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport \"./ReadArticle.scss\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as ArrowRight } from \"../../assets/images/arrow-right.svg\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { scrollTop } from \"../../lib/util\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ReadArticle({ to, loading }) {\n  const {t} = useTranslation()\n \n  return (\n    <Link className=\"read_article\" to={to} onClick={scrollTop}>\n      {!loading ? (\n        <Fragment>\n          <span>{t(\"readArticle\")}</span>\n          <ArrowRight className=\"read_article__arrow\" />\n        </Fragment>\n      ) : (\n        <Skeleton width={100} />\n      )}\n    </Link>\n  );\n}\n","import Skeleton from \"react-loading-skeleton\";\nimport ReadArticle from \"../ReadArticle/ReadArticle\";\nimport \"./RelatedCard.scss\";\n\nconst RelatedCard = ({\n  data,\n  readLink,\n  className,\n  loading,\n  term,\n  background,\n  colorMap,\n}) => {\n  const parser = new DOMParser();\n\n  const category = data ? (\n    data?.resourceCategories?.nodes[0]?.name\n  ) : (\n    <Skeleton width={\"50%\"} />\n  );\n  const title = data ? data?.title : <Skeleton count={2} />;\n  const slug = data?.slug;\n  const description = data ? (\n    parser\n      .parseFromString(data?.content, \"text/html\")\n      .getElementsByTagName(\"p\")[0]?.innerText\n  ) : (\n    <Skeleton count={3} />\n  );\n  const image = data?.featuredImage?.node?.sourceUrl;\n\n  const to = `/${term}/${slug}`;\n\n  const readArticle = !loading ? (\n    <ReadArticle to={to} />\n  ) : (\n    <Skeleton width={\"75%\"} />\n  );\n\n  const categoryColor = data ? colorMap?.get(category) : \"\";\n\n  const titleVariant = background ? `related_card__title--${background}` : \"\";\n  return (\n    <div className=\"related_card\">\n      <div className=\"related_card__top\">\n        {image ? (\n          <div className={`${className ? className : \"\"} related_card__image`}>\n            <a href={to}><img src={image} alt=\"first story\" /></a>\n          </div>\n        ) : (\n          <Skeleton height={180} style={{ borderRadius: \"20px\" }} />\n        )}\n\n        {category ? <p className=\"related_card__category\" style={{color: categoryColor}}>{category}</p> : \"\"}\n\n        {title ? (\n          <h2 className={`related_card__title ${titleVariant}`}>\n            <a className=\"related_card__title-link\" href={to}>\n              {title}\n            </a>\n          </h2>\n        ) : (\n          \"\"\n        )}\n        {description ? (\n          <p className=\"related_card__description\">{description}</p>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"related_card__bottom\">{readLink ? readArticle : \"\"}</div>\n    </div>\n  );\n};\n\nexport default RelatedCard;\n\n\n","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\n// import card1 from \"../../assets/images/card-resource-1.png\";\nimport Button from \"../Button/Button\";\nimport \"./ResourceCard.scss\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function ResourceCard(props) {\n  const {t} = useTranslation();\n  const variant = props.variant ? `resource_card__image--${props.variant}` : \"\";\n  const background = props.background\n    ? `resource_card--${props.background}`\n    : \"\";\n\n  const loading = props.loading;\n\n  const resource = props.data;\n\n  const title = resource?.title ? resource?.title : <Skeleton count={2} />;\n  const imageUrl = resource?.featuredImage?.node?.sourceUrl;\n  const slug = resource?.slug;\n\n  return (\n    <div className={`resource_card ${background}`}>\n      <div className=\"resource_card__image-box\">\n        {imageUrl ? (\n          <img\n            src={imageUrl}\n            alt=\"card1\"\n            className={`resource_card__image ${variant}`}\n          />\n        ) : (\n          <Skeleton height={props.variant === \"longer\" ? 267 : 200} />\n        )}\n        <h3 className=\"resource_card__title\">\n          <a className=\"resource_card__title-link\" href={`/resources/${slug}`}>\n            {title}\n          </a>\n        </h3>\n      </div>\n      <div className=\"resource_card__content\">\n        {!loading ? (\n          <Button\n            type=\"arrow outline\"\n            color=\"green\"\n            text={t(\"readMore\")}\n            href={`/resources/${slug}`}\n          />\n        ) : (\n          <Skeleton height={40} style={{ borderRadius: \"25px\" }} />\n        )}\n      </div>\n    </div>\n  );\n}\n","var _path, _path2, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgShapeheader(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    preserveAspectRatio: \"none\",\n    width: 1440,\n    height: 209,\n    viewBox: \"0 0 1440 209\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M546 21.7718C546 10.058 556.022 0.851702 567.694 1.84363L1502 81.2455V199.5L546 110.638V21.7718Z\",\n    fill: \"#DEF6EC\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M-231 45L546.5 110V186.3C546.5 198.08 536.369 207.308 524.64 206.213L-231 135.638V45Z\",\n    fill: \"url(#paint0_linear_99_18811)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_99_18811\",\n    x1: 521.5,\n    y1: 89,\n    x2: 8.1257,\n    y2: 447.018,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0A61B4\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#074581\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgShapeheader);\nexport default __webpack_public_path__ + \"static/media/Shape header.f1766c99f3129c1b98effbf183f2b622.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Fragment, useEffect, useState } from \"react\";\nimport ResourceCard from \"../../components/ResourceCard/ResourceCard\";\nimport \"./Resources.scss\";\n\n// import graphic from \"../../assets/images/Graphics.svg\";\nimport RelatedCard from \"../../components/RelatedCard/RelatedCard\";\n\n// import card1 from \"../../assets/images/card1.png\";\n// import card2 from \"../../assets/images/card2.png\";\n// import card3 from \"../../assets/images/card3.png\";\nimport Button from \"../../components/Button/Button\";\n\nimport shapeHeader from \"../../assets/images/Resources/Shape header.svg\";\nimport ReadyGet from \"../../components/ReadyGet/ReadyGet\";\nimport LatestBlogs from \"../../components/LatestBlogs/LatestBlogs\";\nimport { useQuery } from \"@apollo/client\";\n\nimport {\n  GET_FIRST_TWO_RESOURCES,\n  GET_RESOURCES,\n  GET_RESOURCES_BY_CATEGORY,\n  GET_RESOURCES_CATEGORIES,\n} from \"../../lib/graphqlQuery\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { convertToSlug, queryLanguageCode } from \"../../lib/util\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function Resources() {\n  const {t} = useTranslation();\n  const [chip, setChip] = useState(\"all\");\n  const [resourceCategories, setResourceCategories] = useState([]);\n  const [colorMap] = useState(new Map());\n  const colors = [\"#20976c\", \"#0a61b4\", \"#A8CA13\", \"#F48C06\"];\n\n  const { loading, data } = useQuery(GET_FIRST_TWO_RESOURCES, {variables: {\n    language: queryLanguageCode()\n  }});\n\n  const twoResources = !loading\n    ? data?.resources?.nodes\n    : Array.from({ length: 2 });\n\n  const endCursor = data?.resources?.pageInfo?.endCursor;\n\n  const loadChip = (chip) => {\n    setChip(chip);\n  };\n\n  const loadResourceCategories = (resourceCategories) => {\n    setResourceCategories(resourceCategories);\n  };\n\n  if (resourceCategories) {\n    resourceCategories.forEach((category, index) => {\n      colorMap.set(category.name, colors[index % colors.length]);\n    });\n  }\n\n  return (\n    <main className=\"resources\">\n      <section className=\"hero\" background=\"light\">\n        <div className=\"container hero__wrapper\">\n          <div className=\"hero__articles\">\n            <div className=\"hero__articles-wrapper\">\n              <div className=\"hero__articles-group\">\n                {twoResources.map((resource, index) => (\n                  <ResourceCard\n                    loading={loading}\n                    data={resource}\n                    variant={index === 1 ? \"longer\" : \"\"}\n                    key={index}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n          <div className=\"hero__content\">\n            <p className=\"hero__name section_name\">{t(\"resourcesPage.hero.name\")}</p>\n            <h1 className=\"hero__title\">{t(\"resourcesPage.hero.title\")}</h1>\n            <p className=\"hero__description\">\n              {t(\"resourcesPage.hero.description\")}\n            </p>\n            <Button\n              type=\"flat-green arrow\"\n              color=\"white\"\n              text={t(\"resourcesPage.hero.button\")}\n            />\n          </div>\n        </div>\n        <div className=\"hero__background\">\n          <img\n            className=\"hero__background-image\"\n            src={shapeHeader}\n            alt=\"\"\n            aria-hidden=\"true\"\n          />\n        </div>\n      </section>\n\n      <section className=\"business_insight\">\n        <div className=\"container\">\n          <div className=\"business_insight__wrapper\">\n            <div className=\"business_insight__top\">\n              <div className=\"business_insight__highlight\">\n                <p className=\"section_name business_insight__name\">\n                  {t(\"resourcesPage.businessInsight.name\")}\n                </p>\n                <h1 className=\"section_title business_insight__title\">\n                {t(\"resourcesPage.businessInsight.title\")}\n                </h1>\n              </div>\n              <div className=\"business_insight__button\">\n                <Button type=\"outline arrow\" text={t(\"resourcesPage.businessInsight.button\")} color=\"green\" />\n              </div>\n            </div>\n\n            <FourResources slug=\"industry\" endCursor={endCursor} />\n          </div>\n        </div>\n        <div className=\"bottom_triangle bottom_triangle--secondary\"></div>\n      </section>\n\n      <section className=\"insight_update\">\n        <div className=\"container\">\n          <div className=\"insight_update__wrapper\">\n            <h1 className=\"insight_update__title section_title\">\n            {t(\"resourcesPage.insightUpdate.name\")}\n            </h1>\n            <UpdateRadios\n              loadChip={loadChip}\n              loadResourceCategories={loadResourceCategories}\n            />\n\n            <LatestUpdates\n              chip={chip}\n              endCursor={endCursor}\n              colorMap={colorMap}\n            />\n          </div>\n        </div>\n        <div className=\"bottom_triangle bottom_triangle--white\"></div>\n      </section>\n\n      <section className=\"latest_update\">\n        <div className=\"container\">\n          <div className=\"latest_update__wrapper\">\n            <div className=\"latest_update__top\">\n              <div className=\"latest_update__highlight\">\n                <p className=\"latest_update__name section_name\">\n                  {t(\"resourcesPage.latestUpdate.name\")}\n                </p>\n                <h1 className=\"latest_update__title section_title\">\n                {t(\"resourcesPage.latestUpdate.title\")}\n                </h1>\n              </div>\n              <div className=\"latest_update__button\">\n                <Button type=\"outline arrow\" color=\"green\" text={t(\"seeAll\")} />\n              </div>\n            </div>\n\n            <FourResources slug=\"business\" endCursor={endCursor} />\n          </div>\n        </div>\n\n        <div className=\"bottom_triangle bottom_triangle--dark-blue\"></div>\n      </section>\n\n      <LatestBlogs triangleColor={\"white\"} />\n\n      <ReadyGet />\n    </main>\n  );\n}\n\nconst FourResources = ({ slug, endCursor }) => {\n  const { loading, data } = useQuery(GET_RESOURCES_BY_CATEGORY, {\n    variables: {\n      cursor: endCursor,\n      id: slug,\n    },\n  });\n\n  const resources = !loading\n    ? data?.resourceCategory?.resources?.nodes\n    : Array.from({ length: 4 });\n  return (\n    <div className=\"business_insight__grid\">\n      {resources.map((resource, index) => (\n        <ResourceCard\n          key={index}\n          loading={loading}\n          data={resource}\n          background=\"greyish-blue\"\n        />\n      ))}\n    </div>\n  );\n};\n\nconst LatestUpdates = ({ chip, endCursor, colorMap }) => {\n  const { loading, data } = useQuery(GET_RESOURCES, {\n    variables: {\n      first: 8,\n      cursor: endCursor,\n      language: queryLanguageCode()\n    },\n  });\n\n  const resources = !loading\n    ? [...data?.resources?.nodes]\n    : Array.from({ length: 8 });\n\n  let filteredResources = resources;\n\n  if (!loading && chip !== \"all\") {\n    filteredResources = resources.filter((resource) => {\n      const resourceCategories = resource?.resourceCategories?.nodes.map(\n        (node) => node.slug\n      );\n      return resourceCategories.includes(chip);\n    });\n  }\n\n  return (\n    <div className=\"insight_update__grid\">\n      {filteredResources.map((resource, index) => (\n        <RelatedCard\n          key={index}\n          data={resource}\n          readLink={true}\n          loading={loading}\n          term=\"resources\"\n          colorMap={colorMap}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst UpdateRadios = ({ loadChip, loadResourceCategories }) => {\n  const {t} = useTranslation();\n  const [chip, setChip] = useState(\"all\");\n  const [load, setLoad] = useState(false);\n\n  const handleRadioChange = (event) => {\n    loadChip(event.target.id);\n    setChip(event.target.id);\n  };\n\n  const { loading, data } = useQuery(GET_RESOURCES_CATEGORIES, {variables: {\n    language: queryLanguageCode()\n  }});\n\n  const resourceCategories = !loading\n    ? data?.resourceCategories?.nodes.filter((node) => node.count > 0)\n    : Array.from({ length: 3 });\n\n  useEffect(() => {\n    if (!loading && load === false) {\n      loadResourceCategories(resourceCategories);\n      setLoad(true);\n    }\n  }, [load, loading, loadResourceCategories, resourceCategories]);\n  return (\n    <div className=\"insight_update__radios\">\n      {!loading ? (\n        <Fragment>\n          <div className=\"chip\">\n            <input\n              id={convertToSlug(t(\"all\"))}\n              type=\"radio\"\n              name=\"radio\"\n              onChange={handleRadioChange}\n              checked={chip === convertToSlug(t(\"all\"))}\n            />\n            <label htmlFor=\"all\">{t(\"all\")}</label>\n          </div>\n          {resourceCategories.map((category, index) => (\n            <div className=\"chip\" key={index}>\n              <input\n                id={category.slug}\n                type=\"radio\"\n                name=\"radio\"\n                onChange={handleRadioChange}\n                checked={chip === category.slug}\n              />\n              <label htmlFor={category.slug}>{category.name}</label>\n            </div>\n          ))}\n        </Fragment>\n      ) : (\n        resourceCategories.map((_category, index) => (\n          <Skeleton\n            key={index}\n            className=\"chip\"\n            height={40}\n            width={100}\n            style={{ borderRadius: \"20px\" }}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n"],"names":["LatestBlogs","_ref","_data$posts","triangleColor","t","useTranslation","_useQuery","useQuery","GET_BLOGS","variables","first","language","queryLanguageCode","loading","data","blogs","Array","from","length","posts","nodes","_jsxs","className","children","_jsx","Button","type","text","href","map","blog","index","RelatedCard","readLink","background","term","concat","ReadArticle","to","Link","onClick","scrollTop","Skeleton","width","Fragment","ArrowRight","_data$resourceCategor","_data$resourceCategor2","_parser$parseFromStri","_data$featuredImage","_data$featuredImage$n","colorMap","parser","DOMParser","category","resourceCategories","name","title","count","slug","description","parseFromString","content","getElementsByTagName","innerText","image","featuredImage","node","sourceUrl","readArticle","categoryColor","get","titleVariant","src","alt","height","style","borderRadius","color","ResourceCard","props","_resource$featuredIma","_resource$featuredIma2","variant","resource","imageUrl","Resources","_data$resources","_data$resources2","_data$resources2$page","_useState","useState","_useState2","_slicedToArray","chip","setChip","_useState3","_useState4","setResourceCategories","_useState5","Map","colors","GET_FIRST_TWO_RESOURCES","twoResources","resources","endCursor","pageInfo","forEach","set","shapeHeader","FourResources","UpdateRadios","loadChip","loadResourceCategories","LatestUpdates","ReadyGet","_useQuery2","GET_RESOURCES_BY_CATEGORY","cursor","id","resourceCategory","_ref2","_data$resources3","_useQuery3","GET_RESOURCES","_toConsumableArray","filteredResources","filter","_resource$resourceCat","includes","_ref3","_data$resourceCategor3","_useState7","_useState8","_useState9","_useState10","load","setLoad","handleRadioChange","event","target","_useQuery4","GET_RESOURCES_CATEGORIES","useEffect","_category","convertToSlug","onChange","checked","htmlFor"],"sourceRoot":""}