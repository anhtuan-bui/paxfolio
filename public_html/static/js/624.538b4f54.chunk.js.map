{"version":3,"file":"static/js/624.538b4f54.chunk.js","mappings":"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","sources":["components/Author/Author.jsx","components/LatestBlogs/LatestBlogs.jsx","components/ReadArticle/ReadArticle.jsx","components/RelatedCard/RelatedCard.jsx","components/RelatedBlogs/RelatedBlogs.jsx","components/Article/Article.jsx","pages/BlogDetails/BlogDetails.jsx"],"sourcesContent":["import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"./Author.scss\";\n\n//  How to use\n// add the post contain the author in data prop\n\nexport default function Author(props) {\n  const author = props.author?.node;\n  const authorNameString =\n    author?.firstName || author?.lastName\n      ? `${author?.firstName ? author?.firstName : \"\"} ${\n          author?.lastName ? author?.lastName : \"\"\n        }`\n      : author?.name\n      ? `@${author?.username}`\n      : \"\";\n\n  const authorAvatarUrl = author?.avatar.url;\n\n  const authorName = authorNameString ? (\n    authorNameString\n  ) : (\n    <Skeleton width={100} />\n  );\n\n  const authorTitle = author ? (\n    author?.roles?.nodes[0]?.displayName\n  ) : (\n    <Skeleton width={75} />\n  );\n  return (\n    <div className={`author ${props.className ? props.className : \"\"}`}>\n      {author ? (\n        <div className=\"author__avatar\">\n          <img src={authorAvatarUrl} alt=\"author avatar\" />\n        </div>\n      ) : (\n        <Skeleton width={50} height={50} style={{ borderRadius: \"50%\" }} />\n      )}\n      <div className=\"author_info\">\n        <h4 className=\"author__name\">{authorName}</h4>\n        <p className=\"author__occupation\">{authorTitle}</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"../Button/Button\";\nimport RelatedCard from \"../RelatedCard/RelatedCard\";\nimport \"./LatestBlogs.scss\";\nimport { useQuery } from \"@apollo/client\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\n\n// import card1 from \"../../assets/images/card1.png\";\n// import card2 from \"../../assets/images/card2.png\";\n// import card3 from \"../../assets/images/card3.png\";\nimport { GET_BLOGS } from \"../../lib/graphqlQuery\";\nimport { useTranslation } from \"react-i18next\";\nimport { queryLanguageCode } from \"../../lib/util\";\n\nexport default function LatestBlogs({ triangleColor }) {\n  const {t} = useTranslation();\n  const { loading, data } = useQuery(GET_BLOGS, {\n    variables: {\n      first: 4,\n      language: queryLanguageCode()\n    },\n  });\n\n  const blogs = !loading ? data?.posts?.nodes : Array.from({ length: 4 });\n  return (\n    <section className=\"platform background--dark-blue platform__title--white\">\n      <div className=\"container platform__container\">\n        <div className=\"platform__top\">\n          <div className=\"platform__top-left\">\n            <p className=\"platform__name platform__name--green section_name\">\n              {t(\"latestBlogs.name\")}\n            </p>\n            <h2 className=\"platform__title section_title\">\n              {t(\"latestBlogs.title\")}\n            </h2>\n          </div>\n          <div className=\"platform__top-right\">\n            <Button type=\"outline arrow\" text={t(\"latestBlogs.button\")} href='/blogs'/>\n          </div>\n        </div>\n        <div className=\"platform__content\">\n          {blogs.map((blog, index) => (\n            <RelatedCard\n              key={index}\n              data={blog}\n              readLink={true}\n              background=\"dark\"\n              term=\"blogs\"\n              loading={loading}\n            />\n          ))}\n        </div>\n      </div>\n      <div\n        className={`bottom_triangle bottom_triangle--${triangleColor}`}\n      ></div>\n    </section>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport \"./ReadArticle.scss\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as ArrowRight } from \"../../assets/images/arrow-right.svg\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { scrollTop } from \"../../lib/util\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ReadArticle({ to, loading }) {\n  const {t} = useTranslation()\n \n  return (\n    <Link className=\"read_article\" to={to} onClick={scrollTop}>\n      {!loading ? (\n        <Fragment>\n          <span>{t(\"readArticle\")}</span>\n          <ArrowRight className=\"read_article__arrow\" />\n        </Fragment>\n      ) : (\n        <Skeleton width={100} />\n      )}\n    </Link>\n  );\n}\n","import Skeleton from \"react-loading-skeleton\";\nimport ReadArticle from \"../ReadArticle/ReadArticle\";\nimport \"./RelatedCard.scss\";\n\nconst RelatedCard = ({\n  data,\n  readLink,\n  className,\n  loading,\n  term,\n  background,\n  colorMap,\n}) => {\n  const parser = new DOMParser();\n\n  const category = data ? (\n    data?.resourceCategories?.nodes[0]?.name\n  ) : (\n    <Skeleton width={\"50%\"} />\n  );\n  const title = data ? data?.title : <Skeleton count={2} />;\n  const slug = data?.slug;\n  const description = data ? (\n    parser\n      .parseFromString(data?.content, \"text/html\")\n      .getElementsByTagName(\"p\")[0]?.innerText\n  ) : (\n    <Skeleton count={3} />\n  );\n  const image = data?.featuredImage?.node?.sourceUrl;\n\n  const to = `/${term}/${slug}`;\n\n  const readArticle = !loading ? (\n    <ReadArticle to={to} />\n  ) : (\n    <Skeleton width={\"75%\"} />\n  );\n\n  const categoryColor = data ? colorMap?.get(category) : \"\";\n\n  const titleVariant = background ? `related_card__title--${background}` : \"\";\n  return (\n    <div className=\"related_card\">\n      <div className=\"related_card__top\">\n        {image ? (\n          <div className={`${className ? className : \"\"} related_card__image`}>\n            <a href={to}><img src={image} alt=\"first story\" /></a>\n          </div>\n        ) : (\n          <Skeleton height={180} style={{ borderRadius: \"20px\" }} />\n        )}\n\n        {category ? <p className=\"related_card__category\" style={{color: categoryColor}}>{category}</p> : \"\"}\n\n        {title ? (\n          <h2 className={`related_card__title ${titleVariant}`}>\n            <a className=\"related_card__title-link\" href={to}>\n              {title}\n            </a>\n          </h2>\n        ) : (\n          \"\"\n        )}\n        {description ? (\n          <p className=\"related_card__description\">{description}</p>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"related_card__bottom\">{readLink ? readArticle : \"\"}</div>\n    </div>\n  );\n};\n\nexport default RelatedCard;\n\n\n","import \"./RelatedBlogs.scss\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_RELATED_POST } from \"../../lib/graphqlQuery\";\nimport RelatedCard from \"../../components/RelatedCard/RelatedCard\";\nimport { queryLanguageCode } from \"../../lib/util\";\nimport { useTranslation } from \"react-i18next\";\n\nconst RelatedBlogs = ({ currentCategory, currentId }) => {\n  const {t} = useTranslation();\n  const numberOfRelatedBlogs = 2;\n  const { data, loading } = useQuery(GET_RELATED_POST, {\n    variables: {\n      categoryName: currentCategory,\n      id: currentId,\n      language: queryLanguageCode()\n    },\n  });\n\n  const relatedBlogsLoading = () => {\n    let relatedBlogs = [];\n    for (let i = 0; i < numberOfRelatedBlogs; i++) {\n      relatedBlogs.push(\n        <div key={i} className=\"skeleton-container\">\n          <Skeleton height=\"250px\" borderRadius=\"20px\" />\n          <div>\n            <p>\n              <Skeleton count={1} width=\"50%\" />\n            </p>\n            <h2>\n              <Skeleton count={1} />\n            </h2>\n            <p>\n              <Skeleton count={2} />\n            </p>\n          </div>\n        </div>\n      );\n    }\n    return relatedBlogs;\n  };\n\n  const relatedBlogsLoaded = () => {\n    let relatedBlogs = [];\n    const postsNodes = data?.posts?.nodes;\n    // Filtering all the posts to get 2 random posts from the same category as the current post\n    const categoryBlogs = postsNodes\n      ?.filter((node) => {\n        return (\n          node?.categories?.nodes[0]?.name === currentCategory\n        );\n      })\n      .sort(() => 0.5 - Math.random())\n      .slice(0, numberOfRelatedBlogs);\n\n    categoryBlogs.forEach((blog) => {\n      relatedBlogs.push(\n        <RelatedCard key={blog.id} term=\"blogs\" data={blog} readLink={true} />\n      );\n    });\n    return relatedBlogs;\n  };\n\n  return (\n    <section className=\"recommended\">\n      <p className=\"recommended__title section_name\">{t(\"recommended\")}</p>\n      <div className=\"recommended_container\">\n        {loading ? relatedBlogsLoading() : relatedBlogsLoaded()}\n      </div>\n    </section>\n  );\n};\n\nexport default RelatedBlogs;\n","import Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport \"./Article.scss\";\nimport Author from \"../../components/Author/Author\";\n\nconst Article = ({ blogArticle, loading }) => {\n  let postDate, title, articleImage, articleContent;\n  // Converting date format\n  const blogDate = () => {\n    let postDate = new Date(blogArticle?.post?.date);\n    postDate = postDate.toLocaleString(\"en-US\", {\n      month: \"long\",\n      day: \"2-digit\",\n      year: \"numeric\",\n    });\n    return postDate;\n  };\n  const articleLoading = () => {\n    postDate = <Skeleton width=\"45%\" />;\n    title = <Skeleton width=\"75%\" />;\n    articleImage = (\n      <div className=\"article_info__img\">\n        <Skeleton height=\"100%\" borderRadius=\"20px\" />\n      </div>\n    );\n    articleContent = (\n      <div className=\"article-content\">\n        <h2>\n          <Skeleton count={1} width=\"75%\" />\n        </h2>\n        <p>\n          <Skeleton count={5} />\n        </p>\n        <p>\n          <Skeleton count={5} />\n        </p>\n        <p>\n          <Skeleton count={5} />\n        </p>\n        <p>\n          <Skeleton count={5} />\n        </p>\n        <p>\n          <Skeleton count={5} />\n        </p>\n      </div>\n    );\n  };\n  const articleLoaded = () => {\n    postDate = blogDate();\n    title = blogArticle?.post?.title ?? \"\";\n    articleImage = (\n      <img\n        className=\"article_info__img\"\n        src={blogArticle?.post?.featuredImage?.node?.sourceUrl}\n        alt=\"Article\"\n      />\n    );\n    articleContent = (\n      <div\n        className=\"article_detail\"\n        style={{ marginTop: \"35px\" }}\n        dangerouslySetInnerHTML={{ __html: blogArticle?.post?.content }}\n      ></div>\n    );\n  };\n\n  loading ? articleLoading() : articleLoaded();\n  return (\n    <>\n      <section className=\"article_info\">\n        <div className=\"article_info__date section_name\">{postDate}</div>\n        <h1 className=\"article_info__title\">{title}</h1>\n        {articleImage}\n      </section>\n      <Author\n        className=\"author--blog-detail\"\n        author={blogArticle?.post?.author}\n      />\n      <div className=\"article\">{articleContent}</div>\n    </>\n  );\n};\n\nexport default Article;\n","import \"./BlogDetails.scss\";\nimport { useLocation } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_BLOG_DETAILS } from \"../../lib/graphqlQuery\";\nimport ShareToSocialMedias from \"../../components/ShareToSocialMedias/ShareToSocialMedias\";\nimport LatestBlogs from \"../../components/LatestBlogs/LatestBlogs\";\nimport RelatedBlogs from \"../../components/RelatedBlogs/RelatedBlogs\";\nimport Article from \"../../components/Article/Article\";\nimport SectionTriangleRight from \"../../components/SectionTriangleRight/SectionTriangleRight\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\n\nconst BlogDetails = () => {\n  // Current Blog Slug\n  const slug = useLocation().pathname.split(\"/\").pop();\n  // Querying Current Blog\n  const { loading, data } = useQuery(GET_BLOG_DETAILS, {\n    variables: { slug },\n  });\n\n  // -> Current Blog Details\n  const title = !loading ? data?.post?.title : \"\";\n  const currentCategory = !loading\n    ? data?.post?.categories?.nodes[0]?.name\n    : \"\";\n  const imgSrc = !loading ? data?.post?.featuredImage?.node?.sourceUrl : \"\";\n  const id = !loading? data?.post?.databaseId : null\n\n  return (\n    <>\n      <div className=\"container hero\" background=\"light\">\n        <main className=\"blog_details__main\">\n          <Article blogArticle={data} loading={loading} />\n          <ShareToSocialMedias\n            slug={slug}\n            title={title}\n            term=\"blogs\"\n            imageUrl={imgSrc}\n            className=\"blog-details-social\"\n          />\n          <RelatedBlogs\n            currentSlug={slug}\n            currentCategory={currentCategory}\n            currentId={id}\n          />\n        </main>\n      </div>\n      <div className=\"latest_blogs__container\">\n        <SectionTriangleRight variant=\"dark-blue\" />\n        <LatestBlogs triangleColor=\"light-blue\" />\n      </div>\n      <div className=\"footer_triangle\">\n        <SectionTriangleRight variant=\"light-blue\" />\n      </div>\n    </>\n  );\n};\n\nexport default BlogDetails;\n"],"names":["Author","props","_props$author","_author$roles","_author$roles$nodes$","author","node","authorNameString","firstName","lastName","concat","name","username","authorAvatarUrl","avatar","url","authorName","_jsx","Skeleton","width","authorTitle","roles","nodes","displayName","_jsxs","className","children","src","alt","height","style","borderRadius","LatestBlogs","_ref","_data$posts","triangleColor","t","useTranslation","_useQuery","useQuery","GET_BLOGS","variables","first","language","queryLanguageCode","loading","data","blogs","Array","from","length","posts","Button","type","text","href","map","blog","index","RelatedCard","readLink","background","term","ReadArticle","to","Link","onClick","scrollTop","Fragment","ArrowRight","_data$resourceCategor","_data$resourceCategor2","_parser$parseFromStri","_data$featuredImage","_data$featuredImage$n","colorMap","parser","DOMParser","category","resourceCategories","title","count","slug","description","parseFromString","content","getElementsByTagName","innerText","image","featuredImage","sourceUrl","readArticle","categoryColor","get","titleVariant","color","currentCategory","currentId","GET_RELATED_POST","categoryName","id","relatedBlogs","i","push","relatedBlogsLoading","postsNodes","filter","_node$categories","_node$categories$node","categories","sort","Math","random","slice","forEach","relatedBlogsLoaded","_blogArticle$post5","postDate","articleImage","articleContent","blogArticle","_blogArticle$post$tit","_blogArticle$post2","_blogArticle$post3","_blogArticle$post3$fe","_blogArticle$post3$fe2","_blogArticle$post4","_blogArticle$post","Date","post","date","toLocaleString","month","day","year","blogDate","marginTop","dangerouslySetInnerHTML","__html","articleLoaded","_Fragment","_data$post","_data$post2","_data$post2$categorie","_data$post2$categorie2","_data$post3","_data$post3$featuredI","_data$post3$featuredI2","_data$post4","useLocation","pathname","split","pop","GET_BLOG_DETAILS","imgSrc","databaseId","Article","ShareToSocialMedias","imageUrl","RelatedBlogs","currentSlug","SectionTriangleRight","variant"],"sourceRoot":""}