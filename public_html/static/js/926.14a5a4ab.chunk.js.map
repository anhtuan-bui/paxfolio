{"version":3,"file":"static/js/926.14a5a4ab.chunk.js","mappings":"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","sources":["components/LatestBlogs/LatestBlogs.jsx","components/ReadArticle/ReadArticle.jsx","components/RelatedCard/RelatedCard.jsx","lib/util.js","components/ResourceCard/ResourceCard.jsx","assets/images/Resources/Shape header.svg","pages/Resources/Resources.jsx"],"sourcesContent":["import React from \"react\";\nimport Button from \"../Button/Button\";\nimport RelatedCard from \"../RelatedCard/RelatedCard\";\nimport \"./LatestBlogs.scss\";\nimport { useQuery } from \"@apollo/client\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\n\n// import card1 from \"../../assets/images/card1.png\";\n// import card2 from \"../../assets/images/card2.png\";\n// import card3 from \"../../assets/images/card3.png\";\nimport { GET_BLOGS } from \"../../lib/graphqlQuery\";\n\nexport default function LatestBlogs({ triangleColor }) {\n  const { loading, data } = useQuery(GET_BLOGS, {\n    variables: {\n      first: 4,\n    },\n  });\n\n  const blogs = !loading ? data?.posts?.nodes : Array.from({ length: 4 });\n  return (\n    <section className=\"platform background--dark-blue platform__title--white\">\n      <div className=\"container platform__container\">\n        <div className=\"platform__top\">\n          <div className=\"platform__top-left\">\n            <p className=\"platform__name platform__name--green section_name\">\n              PAXFORM BLOG\n            </p>\n            <h2 className=\"platform__title section_title\">\n              Latest Blog’s from Paxform.\n            </h2>\n          </div>\n          <div className=\"platform__top-right\">\n            <Button type=\"outline arrow\" text=\"See All Blog Post\" href='/blogs'/>\n          </div>\n        </div>\n        <div className=\"platform__content\">\n          {blogs.map((blog, index) => (\n            <RelatedCard\n              key={index}\n              data={blog}\n              readLink={true}\n              background=\"dark\"\n              term=\"blogs\"\n              loading={loading}\n            />\n          ))}\n        </div>\n      </div>\n      <div\n        className={`bottom_triangle bottom_triangle--${triangleColor}`}\n      ></div>\n    </section>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport \"./ReadArticle.scss\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as ArrowRight } from \"../../assets/images/arrow-right.svg\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { scrollTop } from \"../../lib/util\";\nexport default function ReadArticle({ to, loading }) {\n \n  return (\n    <Link className=\"read_article\" to={to} onClick={scrollTop}>\n      {!loading ? (\n        <Fragment>\n          <span>Read Article</span>\n          <ArrowRight className=\"read_article__arrow\" />\n        </Fragment>\n      ) : (\n        <Skeleton width={100} />\n      )}\n    </Link>\n  );\n}\n","import Skeleton from \"react-loading-skeleton\";\nimport ReadArticle from \"../ReadArticle/ReadArticle\";\nimport \"./RelatedCard.scss\";\n\nconst RelatedCard = ({\n  data,\n  readLink,\n  className,\n  loading,\n  term,\n  background,\n  colorMap,\n}) => {\n  const parser = new DOMParser();\n\n  const category = data ? (\n    data?.resourceCategories?.nodes[0]?.name\n  ) : (\n    <Skeleton width={\"50%\"} />\n  );\n  const title = data ? data?.title : <Skeleton count={2} />;\n  const slug = data?.slug;\n  const description = data ? (\n    parser\n      .parseFromString(data?.content, \"text/html\")\n      .getElementsByTagName(\"p\")[0]?.innerText\n  ) : (\n    <Skeleton count={3} />\n  );\n  const image = data?.featuredImage?.node?.sourceUrl;\n\n  const to = `/${term}/${slug}`;\n\n  const readArticle = !loading ? (\n    <ReadArticle to={to} />\n  ) : (\n    <Skeleton width={\"75%\"} />\n  );\n\n  const categoryColor = data ? colorMap?.get(category) : \"\";\n\n  const titleVariant = background ? `related_card__title--${background}` : \"\";\n  return (\n    <div className=\"related_card\">\n      <div className=\"related_card__top\">\n        {image ? (\n          <div className={`${className ? className : \"\"} related_card__image`}>\n            <a href={to}><img src={image} alt=\"first story\" /></a>\n          </div>\n        ) : (\n          <Skeleton height={180} style={{ borderRadius: \"20px\" }} />\n        )}\n\n        {category ? <p className=\"related_card__category\" style={{color: categoryColor}}>{category}</p> : \"\"}\n\n        {title ? (\n          <h2 className={`related_card__title ${titleVariant}`}>\n            <a className=\"related_card__title-link\" href={to}>\n              {title}\n            </a>\n          </h2>\n        ) : (\n          \"\"\n        )}\n        {description ? (\n          <p className=\"related_card__description\">{description}</p>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"related_card__bottom\">{readLink ? readArticle : \"\"}</div>\n    </div>\n  );\n};\n\nexport default RelatedCard;\n\n\n","const navigateToHomePage = () => {\n    window.location.href = \"/\";\n}\nconst scrollIntoViewWithOffset = (element, offset) => {\n    window.scrollTo({\n      behavior: \"smooth\",\n      top:\n        element.getBoundingClientRect().top -\n        document.body.getBoundingClientRect().top -\n        offset,\n    });\n  };\n\n\n  const convertToSlug = (text) => {\n    return text.toLowerCase().split(\" \").join(\"-\");\n  };\n\n  const scrollTop = () => {\n    window.scrollTo(0, 0);\n  };\nexport {navigateToHomePage, scrollIntoViewWithOffset, convertToSlug, scrollTop};","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\n// import card1 from \"../../assets/images/card-resource-1.png\";\nimport Button from \"../Button/Button\";\nimport \"./ResourceCard.scss\";\n\nexport default function ResourceCard(props) {\n  const variant = props.variant ? `resource_card__image--${props.variant}` : \"\";\n  const background = props.background\n    ? `resource_card--${props.background}`\n    : \"\";\n\n  const loading = props.loading;\n\n  const resource = props.data;\n\n  const title = resource?.title ? resource?.title : <Skeleton count={2} />;\n  const imageUrl = resource?.featuredImage?.node?.sourceUrl;\n  const slug = resource?.slug;\n\n  return (\n    <div className={`resource_card ${background}`}>\n      <div className=\"resource_card__image-box\">\n        {imageUrl ? (\n          <img\n            src={imageUrl}\n            alt=\"card1\"\n            className={`resource_card__image ${variant}`}\n          />\n        ) : (\n          <Skeleton height={props.variant === \"longer\" ? 267 : 200} />\n        )}\n        <h3 className=\"resource_card__title\">\n          <a className=\"resource_card__title-link\" href={`/resources/${slug}`}>\n            {title}\n          </a>\n        </h3>\n      </div>\n      <div className=\"resource_card__content\">\n        {!loading ? (\n          <Button\n            type=\"arrow outline\"\n            color=\"green\"\n            text=\"Read More\"\n            href={`/resources/${slug}`}\n          />\n        ) : (\n          <Skeleton height={40} style={{ borderRadius: \"25px\" }} />\n        )}\n      </div>\n    </div>\n  );\n}\n","var _path, _path2, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgShapeheader(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    preserveAspectRatio: \"none\",\n    width: 1440,\n    height: 209,\n    viewBox: \"0 0 1440 209\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M546 21.7718C546 10.058 556.022 0.851702 567.694 1.84363L1502 81.2455V199.5L546 110.638V21.7718Z\",\n    fill: \"#DEF6EC\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M-231 45L546.5 110V186.3C546.5 198.08 536.369 207.308 524.64 206.213L-231 135.638V45Z\",\n    fill: \"url(#paint0_linear_99_18811)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_99_18811\",\n    x1: 521.5,\n    y1: 89,\n    x2: 8.1257,\n    y2: 447.018,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0A61B4\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#074581\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgShapeheader);\nexport default __webpack_public_path__ + \"static/media/Shape header.f1766c99f3129c1b98effbf183f2b622.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Fragment, useEffect, useState } from \"react\";\nimport ResourceCard from \"../../components/ResourceCard/ResourceCard\";\nimport \"./Resources.scss\";\n\n// import graphic from \"../../assets/images/Graphics.svg\";\nimport RelatedCard from \"../../components/RelatedCard/RelatedCard\";\n\n// import card1 from \"../../assets/images/card1.png\";\n// import card2 from \"../../assets/images/card2.png\";\n// import card3 from \"../../assets/images/card3.png\";\nimport Button from \"../../components/Button/Button\";\n\nimport shapeHeader from \"../../assets/images/Resources/Shape header.svg\";\nimport ReadyGet from \"../../components/ReadyGet/ReadyGet\";\nimport LatestBlogs from \"../../components/LatestBlogs/LatestBlogs\";\nimport { useQuery } from \"@apollo/client\";\n\nimport {\n  GET_FIRST_TWO_RESOURCES,\n  GET_RESOURCES,\n  GET_RESOURCES_BY_CATEGORY,\n  GET_RESOURCES_CATEGORIES,\n} from \"../../lib/graphqlQuery\";\nimport Skeleton from \"react-loading-skeleton\";\n\nexport default function Resources() {\n  const [chip, setChip] = useState(\"all\");\n  const [resourceCategories, setResourceCategories] = useState([]);\n  const [colorMap] = useState(new Map());\n  const colors = [\"#20976c\", \"#0a61b4\", \"#A8CA13\", \"#F48C06\"];\n\n  const { loading, data } = useQuery(GET_FIRST_TWO_RESOURCES);\n\n  const twoResources = !loading\n    ? data?.resources?.nodes\n    : Array.from({ length: 2 });\n\n  const endCursor = data?.resources?.pageInfo?.endCursor;\n\n  const loadChip = (chip) => {\n    setChip(chip);\n  };\n\n  const loadResourceCategories = (resourceCategories) => {\n    setResourceCategories(resourceCategories);\n  };\n\n  if (resourceCategories) {\n    resourceCategories.forEach((category, index) => {\n      colorMap.set(category.name, colors[index % colors.length]);\n    });\n  }\n\n  return (\n    <main className=\"resources\">\n      <section className=\"hero\" background=\"light\">\n        <div className=\"container hero__wrapper\">\n          <div className=\"hero__articles\">\n            <div className=\"hero__articles-wrapper\">\n              <div className=\"hero__articles-group\">\n                {twoResources.map((resource, index) => (\n                  <ResourceCard\n                    loading={loading}\n                    data={resource}\n                    variant={index === 1 ? \"longer\" : \"\"}\n                    key={index}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n          <div className=\"hero__content\">\n            <p className=\"hero__name section_name\">Paxform Resources</p>\n            <h1 className=\"hero__title\">Guides and resources</h1>\n            <p className=\"hero__description\">\n              Paxform will never share your data with anyone. What’s more, no\n              one at Paxform can view or access your information.\n            </p>\n            <Button\n              type=\"flat-green arrow\"\n              color=\"white\"\n              text=\"See all Resources\"\n            />\n          </div>\n        </div>\n        <div className=\"hero__background\">\n          <img\n            className=\"hero__background-image\"\n            src={shapeHeader}\n            alt=\"\"\n            aria-hidden=\"true\"\n          />\n        </div>\n      </section>\n\n      <section className=\"business_insight\">\n        <div className=\"container\">\n          <div className=\"business_insight__wrapper\">\n            <div className=\"business_insight__top\">\n              <div className=\"business_insight__highlight\">\n                <p className=\"section_name business_insight__name\">\n                  BUSINESS INSIGHT HIGHLIGHT\n                </p>\n                <h1 className=\"section_title business_insight__title\">\n                  Latest Business Insight Highlight\n                </h1>\n              </div>\n              <div className=\"business_insight__button\">\n                <Button type=\"outline arrow\" text=\"See all\" color=\"green\" />\n              </div>\n            </div>\n\n            <FourResources slug=\"industry\" endCursor={endCursor} />\n          </div>\n        </div>\n        <div className=\"bottom_triangle bottom_triangle--secondary\"></div>\n      </section>\n\n      <section className=\"insight_update\">\n        <div className=\"container\">\n          <div className=\"insight_update__wrapper\">\n            <h1 className=\"insight_update__title section_title\">\n              Business Insight and Industry Updates\n            </h1>\n            <UpdateRadios\n              loadChip={loadChip}\n              loadResourceCategories={loadResourceCategories}\n            />\n\n            <LatestUpdates\n              chip={chip}\n              endCursor={endCursor}\n              colorMap={colorMap}\n            />\n          </div>\n        </div>\n        <div className=\"bottom_triangle bottom_triangle--white\"></div>\n      </section>\n\n      <section className=\"latest_update\">\n        <div className=\"container\">\n          <div className=\"latest_update__wrapper\">\n            <div className=\"latest_update__top\">\n              <div className=\"latest_update__highlight\">\n                <p className=\"latest_update__name section_name\">\n                  INDUSTRY UPDATES HIGHLIGHT\n                </p>\n                <h1 className=\"latest_update__title section_title\">\n                  Latest Industry Updates Highlight\n                </h1>\n              </div>\n              <div className=\"latest_update__button\">\n                <Button type=\"outline arrow\" color=\"green\" text=\"See all\" />\n              </div>\n            </div>\n\n            <FourResources slug=\"business\" endCursor={endCursor} />\n          </div>\n        </div>\n\n        <div className=\"bottom_triangle bottom_triangle--dark-blue\"></div>\n      </section>\n\n      <LatestBlogs triangleColor={\"white\"} />\n\n      <ReadyGet />\n    </main>\n  );\n}\n\nconst FourResources = ({ slug, endCursor }) => {\n  const { loading, data } = useQuery(GET_RESOURCES_BY_CATEGORY, {\n    variables: {\n      cursor: endCursor,\n      id: slug,\n    },\n  });\n\n  const resources = !loading\n    ? data?.resourceCategory?.resources?.nodes\n    : Array.from({ length: 4 });\n  return (\n    <div className=\"business_insight__grid\">\n      {resources.map((resource, index) => (\n        <ResourceCard\n          key={index}\n          loading={loading}\n          data={resource}\n          background=\"greyish-blue\"\n        />\n      ))}\n    </div>\n  );\n};\n\nconst LatestUpdates = ({ chip, endCursor, colorMap }) => {\n  const { loading, data } = useQuery(GET_RESOURCES, {\n    variables: {\n      first: 8,\n      cursor: endCursor,\n    },\n  });\n\n  const resources = !loading\n    ? [...data?.resources?.nodes]\n    : Array.from({ length: 8 });\n\n  let filteredResources = resources;\n\n  if (!loading && chip !== \"all\") {\n    filteredResources = resources.filter((resource) => {\n      const resourceCategories = resource?.resourceCategories?.nodes.map(\n        (node) => node.slug\n      );\n      return resourceCategories.includes(chip);\n    });\n  }\n\n  return (\n    <div className=\"insight_update__grid\">\n      {filteredResources.map((resource, index) => (\n        <RelatedCard\n          key={index}\n          data={resource}\n          readLink={true}\n          loading={loading}\n          term=\"resources\"\n          colorMap={colorMap}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst UpdateRadios = ({ loadChip, loadResourceCategories }) => {\n  const [chip, setChip] = useState(\"all\");\n  const [load, setLoad] = useState(false);\n\n  const handleRadioChange = (event) => {\n    loadChip(event.target.id);\n    setChip(event.target.id);\n  };\n\n  const { loading, data } = useQuery(GET_RESOURCES_CATEGORIES);\n\n  const resourceCategories = !loading\n    ? data?.resourceCategories?.nodes.filter((node) => node.count > 0)\n    : Array.from({ length: 3 });\n\n  useEffect(() => {\n    if (!loading && load === false) {\n      loadResourceCategories(resourceCategories);\n      setLoad(true);\n    }\n  }, [load, loading, loadResourceCategories, resourceCategories]);\n  return (\n    <div className=\"insight_update__radios\">\n      {!loading ? (\n        <Fragment>\n          <div className=\"chip\">\n            <input\n              id=\"all\"\n              type=\"radio\"\n              name=\"radio\"\n              onChange={handleRadioChange}\n              checked={chip === \"all\"}\n            />\n            <label htmlFor=\"all\">All</label>\n          </div>\n          {resourceCategories.map((category, index) => (\n            <div className=\"chip\" key={index}>\n              <input\n                id={category.slug}\n                type=\"radio\"\n                name=\"radio\"\n                onChange={handleRadioChange}\n                checked={chip === category.slug}\n              />\n              <label htmlFor={category.slug}>{category.name}</label>\n            </div>\n          ))}\n        </Fragment>\n      ) : (\n        resourceCategories.map((_category, index) => (\n          <Skeleton\n            key={index}\n            className=\"chip\"\n            height={40}\n            width={100}\n            style={{ borderRadius: \"20px\" }}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n"],"names":["LatestBlogs","_ref","_data$posts","triangleColor","_useQuery","useQuery","GET_BLOGS","variables","first","loading","data","blogs","Array","from","length","posts","nodes","_jsxs","className","children","_jsx","Button","type","text","href","map","blog","index","RelatedCard","readLink","background","term","concat","ReadArticle","to","Link","onClick","scrollTop","Skeleton","width","Fragment","ArrowRight","_data$resourceCategor","_data$resourceCategor2","_parser$parseFromStri","_data$featuredImage","_data$featuredImage$n","colorMap","parser","DOMParser","category","resourceCategories","name","title","count","slug","description","parseFromString","content","getElementsByTagName","innerText","image","featuredImage","node","sourceUrl","readArticle","categoryColor","get","titleVariant","src","alt","height","style","borderRadius","color","scrollIntoViewWithOffset","element","offset","window","scrollTo","behavior","top","getBoundingClientRect","document","body","convertToSlug","toLowerCase","split","join","ResourceCard","props","_resource$featuredIma","_resource$featuredIma2","variant","resource","imageUrl","Resources","_data$resources","_data$resources2","_data$resources2$page","_useState","useState","_useState2","_slicedToArray","chip","setChip","_useState3","_useState4","setResourceCategories","_useState5","Map","colors","GET_FIRST_TWO_RESOURCES","twoResources","resources","endCursor","pageInfo","forEach","set","shapeHeader","FourResources","UpdateRadios","loadChip","loadResourceCategories","LatestUpdates","ReadyGet","_useQuery2","GET_RESOURCES_BY_CATEGORY","cursor","id","resourceCategory","_ref2","_data$resources3","_useQuery3","GET_RESOURCES","_toConsumableArray","filteredResources","filter","_resource$resourceCat","includes","_ref3","_data$resourceCategor3","_useState7","_useState8","_useState9","_useState10","load","setLoad","handleRadioChange","event","target","_useQuery4","GET_RESOURCES_CATEGORIES","useEffect","_category","onChange","checked","htmlFor"],"sourceRoot":""}