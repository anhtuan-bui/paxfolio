{"version":3,"file":"static/js/91.3c45f286.chunk.js","mappings":"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","sources":["components/ReadArticle/ReadArticle.jsx","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/SectionTriangleRight/SectionTriangleRight.jsx","components/Author/Author.jsx","components/BlogCard/BlogCard.jsx","components/BlogView/BlogsView.jsx","pages/Blogs/Blogs.jsx","../node_modules/@apollo/src/react/hooks/useSyncExternalStore.ts","../node_modules/@apollo/src/react/parser/index.ts","../node_modules/@apollo/src/react/hooks/useQuery.ts","../node_modules/@apollo/src/react/hooks/useApolloClient.ts"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"./ReadArticle.scss\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as ArrowRight } from \"../../assets/images/arrow-right.svg\";\nexport default class ReadArticle extends Component {\n  render() {\n    return (\n      <Link className=\"read_article\" to={this.props.to}>\n        <span>Read Article</span>\n        <ArrowRight className=\"read_article__arrow\"/>\n      </Link>\n    );\n  }\n}\n","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\nimport \"./SectionTriangleRight.scss\";\n\nexport default function TriangleRight(props) {\n  let className = '';\n\n  switch (props.variant){\n    case \"white\":\n        className = 'section_triangle_right--white';\n        break;\n    case \"green\":\n        className = 'section_triangle_right--green';\n        break;\n    case \"dark-blue\":\n        className = 'section_triangle_right--dark-blue';\n        break;\n    case \"light-blue\":\n        className = 'section_triangle_right--light-blue';\n        break;\n    case \"blue\":\n        className = 'section_triangle_right--blue';\n        break;\n    case \"footer\":\n        className = 'section_triangle_right--footer';\n        break;\n    case \"light-green\":\n        className = 'section_triangle_right--light-green';\n        break;\n    default:\n        className = '';\n  }\n  \n  return (\n    <svg\n      className=\"section_triangle_right\"\n      viewBox=\"0 0 1440 135\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <polygon className={className} points=\"0 0, 0 135, 1440 135\" />\n    </svg>\n  );\n}\n","import React from \"react\";\nimport './Author.scss';\n\nexport default function Author(props) {\n  const author = props.author?.node;\n\n  return (\n    <div className=\"author\">\n      <div className=\"author__avatar\">\n        <img src={author?.avatar.url} alt=\"author avatar\" />\n      </div>\n      <div className=\"author_info\">\n        <h4 className=\"author__name\">{author?.firstName || author?.lastName ? `${author.firstName ? author.firstName : ''} ${author.lastName? author.lastName : ''}` : `@${author?.username}`}</h4>\n        <p className=\"author__occupation\">{author?.roles?.edges[0]?.node?.displayName}</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Author from \"../Author/Author\";\nimport ReadArticle from \"../ReadArticle/ReadArticle\";\nimport \"./BlogCard.scss\";\n\nconst Blog = (props) => {\n  const blog = props.blog\n\n  const firstParagraph = blog.content.split(\"</p>\")[0].split(\"<p>\")[1];\n  return (\n    <div className={`post ${props.className}`}>\n      <div className=\"post__content\">\n        <div className=\"post__content-box\">\n          <p className=\"post__name section_name post__name--blue\">Story</p>\n          <h2 className=\"post__title\">{blog.title}</h2>\n          <p\n            className=\"post__summary\"\n            dangerouslySetInnerHTML={{ __html: firstParagraph }}\n          ></p>\n          <ReadArticle />\n        </div>\n\n        <div className=\"author_box\">\n          <Author author={blog.author}/>\n          <p className=\"author_box__date\">{new Intl.DateTimeFormat(\"en-US\", {\n            month: \"long\",\n            year: \"numeric\",\n            day: \"2-digit\",\n          }).format(new Date(blog.date))}</p>\n        </div>\n      </div>\n      <div className=\"post__image\">\n        <img src={blog.featuredImage.node.sourceUrl} alt=\"blog sample\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Blog;\n","import { useQuery } from \"@apollo/client\";\nimport React, { Fragment } from \"react\";\nimport { GET_POSTS } from \"../../lib/graphqlQuery\";\nimport BlogCard from \"../BlogCard/BlogCard\";\nimport Button from \"../Button/Button\";\nimport \"./BlogsView.scss\";\n\nconst BATCH_SIZE = 5;\n\nexport default function BlogsView() {\n\n  const { loading, error, data, fetchMore } = useQuery(GET_POSTS, {\n    variables: {\n      first: BATCH_SIZE,\n      after: null,\n    },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  if (!data && loading) return <p>Loading...</p>;\n\n  if (error) return <p>An error occured</p>;\n\n  if (!data) {\n    return <p>No posts yet</p>;\n  }\n\n  const posts = data.posts.edges.map((edge) => edge.node);\n  const postInfo = data.posts.pageInfo;\n\n  return (\n    <Fragment>\n      <div className=\"posts_view\">\n        {posts.map(\n          (post, index) => index !== 0 && <BlogCard key={index} blog={post} />\n        )}\n      </div>\n      <div className=\"view_more\">\n        {postInfo.hasNextPage ? (\n          <Button\n            text= {loading? \"Loading...\" : \"View all posts\"}\n            type=\"arrow outline\"\n            arrowVariant=\"down\"\n            color=\"green\"\n            disabled={loading}\n            onClick={(e) => {\n              e.preventDefault();\n              fetchMore({\n                variables: {\n                  after: postInfo.endCursor\n                }\n              })\n            }}\n          />\n        ) : (\n          <p>All posts loaded.</p>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Component, Fragment } from \"react\";\nimport \"./Blogs.scss\";\nimport ReadArticle from \"../../components/ReadArticle/ReadArticle\";\nimport SectionTriangleRight from \"../../components/SectionTriangleRight/SectionTriangleRight\";\nimport Author from \"../../components/Author/Author\";\nimport BlogsView from \"../../components/BlogView/BlogsView\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_POSTS } from \"../../lib/graphqlQuery\";\n\nvar blogEndCursor = null;\n\nexport default class Blogs extends Component {\n  blogs = { chip: \"all\"};\n\n  constructor(props) {\n    super(props);\n\n    this.state = this.blogs;\n    this.handleRadioChange = this.handleRadioChange.bind(this);\n  }\n\n  async componentDidMount() {\n    // this.handleResize();\n    // window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    // window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  // handleResize() {\n  //   const heroBlog = document.querySelector(\".hero_blog\");\n  //   const heroBlogWrapper = document.querySelector(\".hero_blog__wrapper\");\n\n  //   heroBlog.style.height =\n  //     parseInt(window.getComputedStyle(heroBlogWrapper).height.split(\"px\")) -\n  //     92 +\n  //     \"px\";\n  // }\n\n  handleRadioChange(event) {\n    this.blogs.chip = event.target.id;\n    this.setState(this.blogs);\n  }\n\n  render() {\n    return (\n      <main className=\"blogs\">\n        <section className=\"hero\" background=\"light\">\n          <div className=\"container\">\n            <div className=\"hero_blog\">\n              <div className=\"hero_blog__wrapper\">\n                <HeroBlogInfo />\n              </div>\n              <div className=\"hero_graphic\"></div>\n            </div>\n          </div>\n          <SectionTriangleRight variant=\"white\" />\n        </section>\n\n        <section className=\"posts\">\n          <div className=\"container\">\n            <div className=\"chips\">\n              <div className=\"chip\">\n                <input\n                  id=\"all\"\n                  type=\"radio\"\n                  name=\"radio\"\n                  onChange={this.handleRadioChange}\n                  checked={this.state.chip === \"all\"}\n                />\n                <label htmlFor=\"all\">All</label>\n              </div>\n              <div className=\"chip\">\n                <input\n                  id=\"insight\"\n                  type=\"radio\"\n                  name=\"radio\"\n                  onChange={this.handleRadioChange}\n                  checked={this.state.chip === \"insight\"}\n                />\n                <label htmlFor=\"insight\">Insight</label>\n              </div>\n              <div className=\"chip\">\n                <input\n                  id=\"update\"\n                  type=\"radio\"\n                  name=\"radio\"\n                  onChange={this.handleRadioChange}\n                  checked={this.state.chip === \"update\"}\n                />\n                <label htmlFor=\"update\">Update</label>\n              </div>\n            </div>\n\n            <BlogsView firstPost={blogEndCursor}/>\n          </div>\n          <SectionTriangleRight variant=\"footer\" />\n        </section>\n      </main>\n    );\n  }\n}\n\nconst HeroBlogInfo = () => {\n  const { loading, error, data } = useQuery(GET_POSTS, {\n    variables: {first: 1, after: null},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ErrorL {error}</p>;\n\n  const blog = data.posts.edges[0].node;\n\n  // Get the first paragraph of the blog\n  const firstParagraph = blog.content.split(\"</p>\")[0].split(\"<p>\")[1];\n\n  blogEndCursor = data.posts.pageInfo.endCursor;\n\n  return (\n    <Fragment>\n      <div className=\"hero_blog__image\">\n        <img src={blog.featuredImage.node.sourceUrl} alt=\"blog hero\" />\n      </div>\n      <div className=\"hero_blog__content\">\n        <div className=\"hero_blog__content-box\">\n          <p className=\"section_name hero_blog__name\">BLOG TODAYS</p>\n          <h1 className=\"hero_blog__title\">{blog.title}</h1>\n          <p\n            className=\"hero_blog__summary\"\n            dangerouslySetInnerHTML={{\n              __html: firstParagraph,\n            }}\n          ></p>\n          <ReadArticle id={blog.id} />\n        </div>\n\n        <Author author={blog.author} />\n      </div>\n    </Fragment>\n  );\n};\n","import { invariant } from '../../utilities/globals';\nimport * as React from 'react';\n\nimport { canUseLayoutEffect } from '../../utilities';\n\nlet didWarnUncachedGetSnapshot = false;\n\ntype RealUseSESHookType =\n  // This import depends only on the @types/use-sync-external-store package, not\n  // the actual use-sync-external-store package, which is not installed. It\n  // might be nice to get this type from React 18, but it still needs to work\n  // when only React 17 or earlier is installed.\n  typeof import(\"use-sync-external-store\").useSyncExternalStore;\n\n// Prevent webpack from complaining about our feature detection of the\n// useSyncExternalStore property of the React namespace, which is expected not\n// to exist when using React 17 and earlier, and that's fine.\nconst uSESKey = \"useSyncExternalStore\" as keyof typeof React;\nconst realHook = React[uSESKey] as RealUseSESHookType | undefined;\n\n// Adapted from https://www.npmjs.com/package/use-sync-external-store, with\n// Apollo Client deviations called out by \"// DEVIATION ...\" comments.\n\n// When/if React.useSyncExternalStore is defined, delegate fully to it.\nexport const useSyncExternalStore: RealUseSESHookType = realHook || ((\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n) => {\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (\n    // DEVIATION: Using our own __DEV__ polyfill (from ../../utilities/globals).\n    __DEV__ &&\n    !didWarnUncachedGetSnapshot &&\n    // DEVIATION: Not using Object.is because we know our snapshots will never\n    // be exotic primitive values like NaN, which is !== itself.\n    value !== getSnapshot()\n  ) {\n    didWarnUncachedGetSnapshot = true;\n    // DEVIATION: Using invariant.error instead of console.error directly.\n    invariant.error(\n      'The result of getSnapshot should be cached to avoid an infinite loop',\n    );\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{inst}, forceUpdate] = React.useState({inst: {value, getSnapshot}});\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  if (canUseLayoutEffect) {\n    // DEVIATION: We avoid calling useLayoutEffect when !canUseLayoutEffect,\n    // which may seem like a conditional hook, but this code ends up behaving\n    // unconditionally (one way or the other) because canUseLayoutEffect is\n    // constant.\n    React.useLayoutEffect(() => {\n      Object.assign(inst, { value, getSnapshot });\n      // Whenever getSnapshot or subscribe changes, we need to check in the\n      // commit phase if there was an interleaved mutation. In concurrent mode\n      // this can happen all the time, but even in synchronous mode, an earlier\n      // effect may have mutated the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({inst});\n      }\n    }, [subscribe, value, getSnapshot]);\n  } else {\n    Object.assign(inst, { value, getSnapshot });\n  }\n\n  React.useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({inst});\n    }\n\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(function handleStoreChange() {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({inst});\n      }\n    });\n  }, [subscribe]);\n\n  return value;\n});\n\nfunction checkIfSnapshotChanged<Snapshot>({\n  value,\n  getSnapshot,\n}: {\n  value: Snapshot;\n  getSnapshot: () => Snapshot;\n}): boolean {\n  try {\n    return value !== getSnapshot();\n  } catch {\n    return true;\n  }\n}\n","import { invariant } from '../../utilities/globals';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  VariableDefinitionNode,\n  OperationDefinitionNode\n} from 'graphql';\n\nexport enum DocumentType {\n  Query,\n  Mutation,\n  Subscription\n}\n\nexport interface IDocumentDefinition {\n  type: DocumentType;\n  name: string;\n  variables: ReadonlyArray<VariableDefinitionNode>;\n}\n\nconst cache = new Map();\n\nexport function operationName(type: DocumentType) {\n  let name;\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n  return name;\n}\n\n// This parser is mostly used to safety check incoming documents.\nexport function parser(document: DocumentNode): IDocumentDefinition {\n  const cached = cache.get(document);\n  if (cached) return cached;\n\n  let variables, type, name;\n\n  invariant(\n    !!document && !!document.kind,\n    `Argument of ${document} passed to parser was not a valid GraphQL ` +\n      `DocumentNode. You may need to use 'graphql-tag' or another method ` +\n      `to convert your operation into a document`\n  );\n\n  const fragments: DefinitionNode[] = []\n  const queries: DefinitionNode[] = []\n  const mutations: DefinitionNode[] = []\n  const subscriptions: DefinitionNode[] = []\n\n  for (const x of document.definitions) {\n    if (x.kind === 'FragmentDefinition') {\n      fragments.push(x);\n      continue\n    }\n\n    if (x.kind === 'OperationDefinition') {\n      switch (x.operation) {\n        case 'query':\n          queries.push(x);\n          break;\n        case 'mutation':\n          mutations.push(x);\n          break;\n        case 'subscription':\n          subscriptions.push(x);\n          break;\n      }\n    }\n  }\n\n  invariant(\n    !fragments.length ||\n      (queries.length || mutations.length || subscriptions.length),\n    `Passing only a fragment to 'graphql' is not yet supported. ` +\n      `You must include a query, subscription or mutation as well`\n  );\n\n  invariant(\n    queries.length + mutations.length + subscriptions.length <= 1,\n    `react-apollo only supports a query, subscription, or a mutation per HOC. ` +\n      `${document} had ${queries.length} queries, ${subscriptions.length} ` +\n      `subscriptions and ${mutations.length} mutations. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n\n  const definitions = queries.length\n    ? queries\n    : mutations.length\n    ? mutations\n    : subscriptions;\n\n  invariant(\n    definitions.length === 1,\n    `react-apollo only supports one definition per HOC. ${document} had ` +\n      `${definitions.length} definitions. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  const definition = definitions[0] as OperationDefinitionNode;\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data'; // fallback to using data if no name\n  }\n\n  const payload = { name, type, variables };\n  cache.set(document, payload);\n  return payload;\n}\n\nexport function verifyDocumentType(document: DocumentNode, type: DocumentType) {\n  const operation = parser(document);\n  const requiredOperationName = operationName(type);\n  const usedOperationName = operationName(operation.type);\n  invariant(\n    operation.type === type,\n    `Running a ${requiredOperationName} requires a graphql ` +\n      `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n  );\n}\n\n","import { invariant } from '../../utilities/globals';\n\nimport {\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useSyncExternalStore } from './useSyncExternalStore';\nimport { equal } from '@wry/equality';\n\nimport { mergeOptions, OperationVariables, WatchQueryFetchPolicy } from '../../core';\nimport { ApolloContextValue, getApolloContext } from '../context';\nimport { ApolloError } from '../../errors';\nimport {\n  ApolloClient,\n  ApolloQueryResult,\n  NetworkStatus,\n  ObservableQuery,\n  DocumentNode,\n  TypedDocumentNode,\n  WatchQueryOptions,\n} from '../../core';\nimport {\n  QueryHookOptions,\n  QueryResult,\n  ObservableQueryFields,\n} from '../types/types';\n\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport { useApolloClient } from './useApolloClient';\nimport { canUseWeakMap, canUseWeakSet, compact, isNonEmptyArray, maybeDeepFreeze } from '../../utilities';\n\nconst {\n  prototype: {\n    hasOwnProperty,\n  },\n} = Object;\n\nexport function useQuery<\n  TData = any,\n  TVariables = OperationVariables,\n>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options: QueryHookOptions<TData, TVariables> = Object.create(null),\n): QueryResult<TData, TVariables> {\n  return useInternalState(\n    useApolloClient(options.client),\n    query,\n  ).useQuery(options);\n}\n\nexport function useInternalState<TData, TVariables>(\n  client: ApolloClient<any>,\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n): InternalState<TData, TVariables> {\n  const stateRef = useRef<InternalState<TData, TVariables>>();\n  if (\n    !stateRef.current ||\n    client !== stateRef.current.client ||\n    query !== stateRef.current.query\n  ) {\n    stateRef.current = new InternalState(client, query, stateRef.current);\n  }\n  const state = stateRef.current;\n\n  // By default, InternalState.prototype.forceUpdate is an empty function, but\n  // we replace it here (before anyone has had a chance to see this state yet)\n  // with a function that unconditionally forces an update, using the latest\n  // setTick function. Updating this state by calling state.forceUpdate is the\n  // only way we trigger React component updates (no other useState calls within\n  // the InternalState class).\n  const [_tick, setTick] = useState(0);\n  state.forceUpdate = () => {\n    setTick(tick => tick + 1);\n  };\n\n  return state;\n}\n\nclass InternalState<TData, TVariables> {\n  constructor(\n    public readonly client: ReturnType<typeof useApolloClient>,\n    public readonly query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n    previous?: InternalState<TData, TVariables>,\n  ) {\n    verifyDocumentType(query, DocumentType.Query);\n\n    // Reuse previousData from previous InternalState (if any) to provide\n    // continuity of previousData even if/when the query or client changes.\n    const previousResult = previous && previous.result;\n    const previousData = previousResult && previousResult.data;\n    if (previousData) {\n      this.previousData = previousData;\n    }\n  }\n\n  forceUpdate() {\n    // Replaced (in useInternalState) with a method that triggers an update.\n    invariant.warn(\"Calling default no-op implementation of InternalState#forceUpdate\");\n  }\n\n  asyncUpdate() {\n    return new Promise<QueryResult<TData, TVariables>>(resolve => {\n      this.asyncResolveFns.add(resolve);\n      this.optionsToIgnoreOnce.add(this.watchQueryOptions);\n      this.forceUpdate();\n    });\n  }\n\n  private asyncResolveFns = new Set<\n    (result: QueryResult<TData, TVariables>) => void\n  >();\n\n  private optionsToIgnoreOnce = new (canUseWeakSet ? WeakSet : Set)<\n    WatchQueryOptions<TVariables, TData>\n  >();\n\n  // Methods beginning with use- should be called according to the standard\n  // rules of React hooks: only at the top level of the calling function, and\n  // without any dynamic conditional logic.\n  useQuery(options: QueryHookOptions<TData, TVariables>) {\n    // The renderPromises field gets initialized here in the useQuery method, at\n    // the beginning of everything (for a given component rendering, at least),\n    // so we can safely use this.renderPromises in other/later InternalState\n    // methods without worrying it might be uninitialized. Even after\n    // initialization, this.renderPromises is usually undefined (unless SSR is\n    // happening), but that's fine as long as it has been initialized that way,\n    // rather than left uninitialized.\n    this.renderPromises = useContext(getApolloContext()).renderPromises;\n\n    this.useOptions(options);\n\n    const obsQuery = this.useObservableQuery();\n\n    const result = useSyncExternalStore(\n      useCallback(() => {\n        if (this.renderPromises) {\n          return () => {};\n        }\n\n        const onNext = () => {\n          const previousResult = this.result;\n          // We use `getCurrentResult()` instead of the onNext argument because\n          // the values differ slightly. Specifically, loading results will have\n          // an empty object for data instead of `undefined` for some reason.\n          const result = obsQuery.getCurrentResult();\n          // Make sure we're not attempting to re-render similar results\n          if (\n            previousResult &&\n            previousResult.loading === result.loading &&\n            previousResult.networkStatus === result.networkStatus &&\n            equal(previousResult.data, result.data)\n          ) {\n            return;\n          }\n\n          this.setResult(result);\n        };\n\n        const onError = (error: Error) => {\n          const last = obsQuery[\"last\"];\n          subscription.unsubscribe();\n          // Unfortunately, if `lastError` is set in the current\n          // `observableQuery` when the subscription is re-created,\n          // the subscription will immediately receive the error, which will\n          // cause it to terminate again. To avoid this, we first clear\n          // the last error/result from the `observableQuery` before re-starting\n          // the subscription, and restore it afterwards (so the subscription\n          // has a chance to stay open).\n          try {\n            obsQuery.resetLastResults();\n            subscription = obsQuery.subscribe(onNext, onError);\n          } finally {\n            obsQuery[\"last\"] = last;\n          }\n\n          if (!hasOwnProperty.call(error, 'graphQLErrors')) {\n            // The error is not a GraphQL error\n            throw error;\n          }\n\n          const previousResult = this.result;\n          if (\n            !previousResult ||\n            (previousResult && previousResult.loading) ||\n            !equal(error, previousResult.error)\n          ) {\n            this.setResult({\n              data: (previousResult && previousResult.data) as TData,\n              error: error as ApolloError,\n              loading: false,\n              networkStatus: NetworkStatus.error,\n            });\n          }\n        };\n\n        let subscription = obsQuery.subscribe(onNext, onError);\n\n        return () => subscription.unsubscribe();\n      }, [\n        // We memoize the subscribe function using useCallback and the following\n        // dependency keys, because the subscribe function reference is all that\n        // useSyncExternalStore uses internally as a dependency key for the\n        // useEffect ultimately responsible for the subscription, so we are\n        // effectively passing this dependency array to that useEffect buried\n        // inside useSyncExternalStore, as desired.\n        obsQuery,\n        this.renderPromises,\n        this.client.disableNetworkFetches,\n      ]),\n\n      () => this.getCurrentResult(),\n      () => this.getCurrentResult(),\n    );\n\n    // TODO Remove this method when we remove support for options.partialRefetch.\n    this.unsafeHandlePartialRefetch(result);\n\n    const queryResult = this.toQueryResult(result);\n\n    if (!queryResult.loading && this.asyncResolveFns.size) {\n      this.asyncResolveFns.forEach(resolve => resolve(queryResult));\n      this.asyncResolveFns.clear();\n    }\n\n    return queryResult;\n  }\n\n  // These members (except for renderPromises) are all populated by the\n  // useOptions method, which is called unconditionally at the beginning of the\n  // useQuery method, so we can safely use these members in other/later methods\n  // without worrying they might be uninitialized.\n  private renderPromises: ApolloContextValue[\"renderPromises\"];\n  private queryHookOptions: QueryHookOptions<TData, TVariables>;\n  private watchQueryOptions: WatchQueryOptions<TVariables, TData>;\n\n  private useOptions(\n    options: QueryHookOptions<TData, TVariables>,\n  ) {\n    const watchQueryOptions = this.createWatchQueryOptions(\n      this.queryHookOptions = options,\n    );\n\n    // Update this.watchQueryOptions, but only when they have changed, which\n    // allows us to depend on the referential stability of\n    // this.watchQueryOptions elsewhere.\n    const currentWatchQueryOptions = this.watchQueryOptions;\n\n    // To force this equality test to \"fail,\" thereby reliably triggering\n    // observable.reobserve, add any current WatchQueryOptions object(s) you\n    // want to be ignored to this.optionsToIgnoreOnce. A similar effect could be\n    // achieved by nullifying this.watchQueryOptions so the equality test\n    // immediately fails because currentWatchQueryOptions is null, but this way\n    // we can promise a truthy this.watchQueryOptions at all times.\n    if (\n      this.optionsToIgnoreOnce.has(currentWatchQueryOptions) ||\n      !equal(watchQueryOptions, currentWatchQueryOptions)\n    ) {\n      this.watchQueryOptions = watchQueryOptions;\n\n      if (currentWatchQueryOptions && this.observable) {\n        // As advertised in the -Once of this.optionsToIgnoreOnce, this trick is\n        // only good for one forced execution of observable.reobserve per\n        // ignored WatchQueryOptions object, though it is unlikely we will ever\n        // see this exact currentWatchQueryOptions object again here, since we\n        // just replaced this.watchQueryOptions with watchQueryOptions.\n        this.optionsToIgnoreOnce.delete(currentWatchQueryOptions);\n\n        // Though it might be tempting to postpone this reobserve call to the\n        // useEffect block, we need getCurrentResult to return an appropriate\n        // loading:true result synchronously (later within the same call to\n        // useQuery). Since we already have this.observable here (not true for\n        // the very first call to useQuery), we are not initiating any new\n        // subscriptions, though it does feel less than ideal that reobserve\n        // (potentially) kicks off a network request (for example, when the\n        // variables have changed), which is technically a side-effect.\n        this.observable.reobserve(this.getObsQueryOptions());\n\n        // Make sure getCurrentResult returns a fresh ApolloQueryResult<TData>,\n        // but save the current data as this.previousData, just like setResult\n        // usually does.\n        this.previousData = this.result?.data || this.previousData;\n        this.result = void 0;\n      }\n    }\n\n    // Make sure state.onCompleted and state.onError always reflect the latest\n    // options.onCompleted and options.onError callbacks provided to useQuery,\n    // since those functions are often recreated every time useQuery is called.\n    // Like the forceUpdate method, the versions of these methods inherited from\n    // InternalState.prototype are empty no-ops, but we can override them on the\n    // base state object (without modifying the prototype).\n    this.onCompleted = options.onCompleted || InternalState.prototype.onCompleted;\n    this.onError = options.onError || InternalState.prototype.onError;\n\n    if (\n      (this.renderPromises || this.client.disableNetworkFetches) &&\n      this.queryHookOptions.ssr === false &&\n      !this.queryHookOptions.skip\n    ) {\n      // If SSR has been explicitly disabled, and this function has been called\n      // on the server side, return the default loading state.\n      this.result = this.ssrDisabledResult;\n    } else if (\n      this.queryHookOptions.skip ||\n      this.watchQueryOptions.fetchPolicy === 'standby'\n    ) {\n      // When skipping a query (ie. we're not querying for data but still want to\n      // render children), make sure the `data` is cleared out and `loading` is\n      // set to `false` (since we aren't loading anything).\n      //\n      // NOTE: We no longer think this is the correct behavior. Skipping should\n      // not automatically set `data` to `undefined`, but instead leave the\n      // previous data in place. In other words, skipping should not mandate that\n      // previously received data is all of a sudden removed. Unfortunately,\n      // changing this is breaking, so we'll have to wait until Apollo Client 4.0\n      // to address this.\n      this.result = this.skipStandbyResult;\n    } else if (\n      this.result === this.ssrDisabledResult ||\n      this.result === this.skipStandbyResult\n    ) {\n      this.result = void 0;\n    }\n  }\n\n  private getObsQueryOptions(): WatchQueryOptions<TVariables, TData> {\n    const toMerge: Array<\n      Partial<WatchQueryOptions<TVariables, TData>>\n    > = [];\n\n    const globalDefaults = this.client.defaultOptions.watchQuery;\n    if (globalDefaults) toMerge.push(globalDefaults);\n\n    if (this.queryHookOptions.defaultOptions) {\n      toMerge.push(this.queryHookOptions.defaultOptions);\n    }\n\n    // We use compact rather than mergeOptions for this part of the merge,\n    // because we want watchQueryOptions.variables (if defined) to replace\n    // this.observable.options.variables whole. This replacement allows\n    // removing variables by removing them from the variables input to\n    // useQuery. If the variables were always merged together (rather than\n    // replaced), there would be no way to remove existing variables.\n    // However, the variables from options.defaultOptions and globalDefaults\n    // (if provided) should be merged, to ensure individual defaulted\n    // variables always have values, if not otherwise defined in\n    // observable.options or watchQueryOptions.\n    toMerge.push(compact(\n      this.observable && this.observable.options,\n      this.watchQueryOptions,\n    ));\n\n    return toMerge.reduce(\n      mergeOptions\n    ) as WatchQueryOptions<TVariables, TData>;\n  }\n\n  private ssrDisabledResult = maybeDeepFreeze({\n    loading: true,\n    data: void 0 as unknown as TData,\n    error: void 0,\n    networkStatus: NetworkStatus.loading,\n  });\n\n  private skipStandbyResult = maybeDeepFreeze({\n    loading: false,\n    data: void 0 as unknown as TData,\n    error: void 0,\n    networkStatus: NetworkStatus.ready,\n  });\n\n  // A function to massage options before passing them to ObservableQuery.\n  private createWatchQueryOptions({\n    skip,\n    ssr,\n    onCompleted,\n    onError,\n    defaultOptions,\n    // The above options are useQuery-specific, so this ...otherOptions spread\n    // makes otherOptions almost a WatchQueryOptions object, except for the\n    // query property that we add below.\n    ...otherOptions\n  }: QueryHookOptions<TData, TVariables> = {}): WatchQueryOptions<TVariables, TData> {\n    // This Object.assign is safe because otherOptions is a fresh ...rest object\n    // that did not exist until just now, so modifications are still allowed.\n    const watchQueryOptions: WatchQueryOptions<TVariables, TData> =\n      Object.assign(otherOptions, { query: this.query });\n\n    if (\n      this.renderPromises &&\n      (\n        watchQueryOptions.fetchPolicy === 'network-only' ||\n        watchQueryOptions.fetchPolicy === 'cache-and-network'\n      )\n    ) {\n      // this behavior was added to react-apollo without explanation in this PR\n      // https://github.com/apollographql/react-apollo/pull/1579\n      watchQueryOptions.fetchPolicy = 'cache-first';\n    }\n\n    if (!watchQueryOptions.variables) {\n      watchQueryOptions.variables = {} as TVariables;\n    }\n\n    if (skip) {\n      const {\n        fetchPolicy = this.getDefaultFetchPolicy(),\n        initialFetchPolicy = fetchPolicy,\n      } = watchQueryOptions;\n\n      // When skipping, we set watchQueryOptions.fetchPolicy initially to\n      // \"standby\", but we also need/want to preserve the initial non-standby\n      // fetchPolicy that would have been used if not skipping.\n      Object.assign(watchQueryOptions, {\n        initialFetchPolicy,\n        fetchPolicy: 'standby',\n      });\n    } else if (!watchQueryOptions.fetchPolicy) {\n      watchQueryOptions.fetchPolicy =\n        this.observable?.options.initialFetchPolicy ||\n        this.getDefaultFetchPolicy();\n    }\n\n    return watchQueryOptions;\n  }\n\n  getDefaultFetchPolicy(): WatchQueryFetchPolicy {\n    return (\n      this.queryHookOptions.defaultOptions?.fetchPolicy ||\n      this.client.defaultOptions.watchQuery?.fetchPolicy ||\n      \"cache-first\"\n    );\n  }\n\n  // Defining these methods as no-ops on the prototype allows us to call\n  // state.onCompleted and/or state.onError without worrying about whether a\n  // callback was provided.\n  private onCompleted(data: TData) {}\n  private onError(error: ApolloError) {}\n\n  private observable: ObservableQuery<TData, TVariables>;\n  private obsQueryFields: Omit<\n    ObservableQueryFields<TData, TVariables>,\n    \"variables\"\n  >;\n\n  private useObservableQuery() {\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    const obsQuery = this.observable =\n      this.renderPromises\n        && this.renderPromises.getSSRObservable(this.watchQueryOptions)\n        || this.observable // Reuse this.observable if possible (and not SSR)\n        || this.client.watchQuery(this.getObsQueryOptions());\n\n    this.obsQueryFields = useMemo(() => ({\n      refetch: obsQuery.refetch.bind(obsQuery),\n      reobserve: obsQuery.reobserve.bind(obsQuery),\n      fetchMore: obsQuery.fetchMore.bind(obsQuery),\n      updateQuery: obsQuery.updateQuery.bind(obsQuery),\n      startPolling: obsQuery.startPolling.bind(obsQuery),\n      stopPolling: obsQuery.stopPolling.bind(obsQuery),\n      subscribeToMore: obsQuery.subscribeToMore.bind(obsQuery),\n    }), [obsQuery]);\n\n    const ssrAllowed = !(\n      this.queryHookOptions.ssr === false ||\n      this.queryHookOptions.skip\n    );\n\n    if (this.renderPromises && ssrAllowed) {\n      this.renderPromises.registerSSRObservable(obsQuery);\n\n      if (obsQuery.getCurrentResult().loading) {\n        // TODO: This is a legacy API which could probably be cleaned up\n        this.renderPromises.addObservableQueryPromise(obsQuery);\n      }\n    }\n\n    return obsQuery;\n  }\n\n  // These members are populated by getCurrentResult and setResult, and it's\n  // okay/normal for them to be initially undefined.\n  private result: undefined | ApolloQueryResult<TData>;\n  private previousData: undefined | TData;\n\n  private setResult(nextResult: ApolloQueryResult<TData>) {\n    const previousResult = this.result;\n    if (previousResult && previousResult.data) {\n      this.previousData = previousResult.data;\n    }\n    this.result = nextResult;\n    // Calling state.setResult always triggers an update, though some call sites\n    // perform additional equality checks before committing to an update.\n    this.forceUpdate();\n    this.handleErrorOrCompleted(nextResult);\n  }\n\n  private handleErrorOrCompleted(result: ApolloQueryResult<TData>) {\n    if (!result.loading) {\n      // wait a tick in case we are in the middle of rendering a component\n      Promise.resolve().then(() => {\n        if (result.error) {\n          this.onError(result.error);\n        } else if (result.data) {\n          this.onCompleted(result.data);\n        }\n      }).catch(error => {\n        invariant.warn(error);\n      });\n    }\n  }\n\n  private getCurrentResult(): ApolloQueryResult<TData> {\n    // Using this.result as a cache ensures getCurrentResult continues returning\n    // the same (===) result object, unless state.setResult has been called, or\n    // we're doing server rendering and therefore override the result below.\n    if (!this.result) {\n      this.handleErrorOrCompleted(\n        this.result = this.observable.getCurrentResult()\n      );\n    }\n    return this.result;\n  }\n\n  // This cache allows the referential stability of this.result (as returned by\n  // getCurrentResult) to translate into referential stability of the resulting\n  // QueryResult object returned by toQueryResult.\n  private toQueryResultCache = new (canUseWeakMap ? WeakMap : Map)<\n    ApolloQueryResult<TData>,\n    QueryResult<TData, TVariables>\n  >();\n\n  toQueryResult(\n    result: ApolloQueryResult<TData>,\n  ): QueryResult<TData, TVariables> {\n    let queryResult = this.toQueryResultCache.get(result);\n    if (queryResult) return queryResult;\n\n    const { data, partial, ...resultWithoutPartial } = result;\n    this.toQueryResultCache.set(result, queryResult = {\n      data, // Ensure always defined, even if result.data is missing.\n      ...resultWithoutPartial,\n      ...this.obsQueryFields,\n      client: this.client,\n      observable: this.observable,\n      variables: this.observable.variables,\n      called: !this.queryHookOptions.skip,\n      previousData: this.previousData,\n    });\n\n    if (!queryResult.error && isNonEmptyArray(result.errors)) {\n      // Until a set naming convention for networkError and graphQLErrors is\n      // decided upon, we map errors (graphQLErrors) to the error options.\n      // TODO: Is it possible for both result.error and result.errors to be\n      // defined here?\n      queryResult.error = new ApolloError({ graphQLErrors: result.errors });\n    }\n\n    return queryResult;\n  }\n\n  private unsafeHandlePartialRefetch(result: ApolloQueryResult<TData>) {\n    // WARNING: SIDE-EFFECTS IN THE RENDER FUNCTION\n    //\n    // TODO: This code should be removed when the partialRefetch option is\n    // removed. I was unable to get this hook to behave reasonably in certain\n    // edge cases when this block was put in an effect.\n    if (\n      result.partial &&\n      this.queryHookOptions.partialRefetch &&\n      !result.loading &&\n      (!result.data || Object.keys(result.data).length === 0) &&\n      this.observable.options.fetchPolicy !== 'cache-only'\n    ) {\n      Object.assign(result, {\n        loading: true,\n        networkStatus: NetworkStatus.refetch,\n      });\n      this.observable.refetch();\n    }\n  }\n}\n","import { invariant } from '../../utilities/globals';\nimport { useContext } from 'react';\nimport { ApolloClient } from '../../core';\nimport { getApolloContext } from '../context';\n\nexport function useApolloClient(\n  override?: ApolloClient<object>,\n): ApolloClient<object> {\n  const context = useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n    'Wrap the root component in an <ApolloProvider>, or pass an ApolloClient ' +\n    'instance in via options.',\n  );\n\n  return client;\n}\n"],"names":["ReadArticle","className","to","this","props","Component","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","TriangleRight","variant","viewBox","xmlns","points","Author","author","node","src","avatar","url","alt","firstName","lastName","username","roles","edges","blog","firstParagraph","content","split","title","dangerouslySetInnerHTML","__html","Intl","DateTimeFormat","month","year","day","format","Date","date","featuredImage","sourceUrl","BlogsView","useQuery","GET_POSTS","variables","first","after","notifyOnNetworkStatusChange","loading","data","fetchMore","posts","map","edge","postInfo","pageInfo","Fragment","post","index","hasNextPage","Button","text","arrowVariant","color","disabled","onClick","e","preventDefault","endCursor","blogEndCursor","Blogs","blogs","chip","handleRadioChange","bind","args","arguments","apply","event","target","id","setState","background","HeroBlogInfo","onChange","checked","htmlFor","firstPost","didWarnUncachedGetSnapshot","useSyncExternalStore","React","subscribe","getSnapshot","getServerSnapshot","__DEV__","invariant","inst","forceUpdate","canUseLayoutEffect","assign","checkIfSnapshotChanged","_a","DocumentType","cache","Map","operationName","Query","Mutation","Subscription","verifyDocumentType","document","operation","cached","get","fragments","queries","mutations","subscriptions","definitions","_i","x","kind","definition","variableDefinitions","requiredOperationName","query","options","client","stateRef","useRef","current","InternalState","useState","setTick","tick","useInternalState","override","useContext","getApolloContext","useApolloClient","previous","asyncResolveFns","Set","optionsToIgnoreOnce","canUseWeakSet","WeakSet","ssrDisabledResult","maybeDeepFreeze","networkStatus","NetworkStatus","skipStandbyResult","toQueryResultCache","canUseWeakMap","WeakMap","previousResult","previousData","_this","add","watchQueryOptions","renderPromises","useOptions","obsQuery","useObservableQuery","useCallback","onNext","getCurrentResult","equal","setResult","subscription","onError","last","unsubscribe","resetLastResults","disableNetworkFetches","unsafeHandlePartialRefetch","queryResult","toQueryResult","size","clear","createWatchQueryOptions","queryHookOptions","currentWatchQueryOptions","has","observable","delete","reobserve","getObsQueryOptions","onCompleted","ssr","skip","fetchPolicy","toMerge","globalDefaults","defaultOptions","watchQuery","compact","reduce","mergeOptions","otherOptions","getDefaultFetchPolicy","_d","initialFetchPolicy","getSSRObservable","obsQueryFields","useMemo","refetch","updateQuery","startPolling","stopPolling","subscribeToMore","ssrAllowed","registerSSRObservable","addObservableQueryPromise","nextResult","handleErrorOrCompleted","catch","resultWithoutPartial","set","called","isNonEmptyArray","errors","ApolloError","graphQLErrors","partial","partialRefetch"],"sourceRoot":""}