{"version":3,"file":"static/js/926.7275014b.chunk.js","mappings":"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","sources":["components/LatestBlogs/LatestBlogs.jsx","components/ReadArticle/ReadArticle.jsx","components/RelatedCard/RelatedCard.jsx","components/ResourceCard/ResourceCard.jsx","assets/images/Resources/Shape header.svg","pages/Resources/Resources.jsx"],"sourcesContent":["import React from \"react\";\nimport Button from \"../Button/Button\";\nimport RelatedCard from \"../RelatedCard/RelatedCard\";\nimport \"./LatestBlogs.scss\";\n\n// import card1 from \"../../assets/images/card1.png\";\n// import card2 from \"../../assets/images/card2.png\";\n// import card3 from \"../../assets/images/card3.png\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_BLOGS } from \"../../lib/graphqlQuery\";\n\nexport default function LatestBlogs({ triangleColor }) {\n  const { loading, data } = useQuery(GET_BLOGS, {\n    variables: {\n      first: 4,\n    },\n  });\n\n  const blogs = !loading ? data?.posts?.nodes : Array.from({ length: 4 });\n  return (\n    <section className=\"platform background--dark-blue platform__title--white\">\n      <div className=\"container platform__container\">\n        <div className=\"platform__top\">\n          <div className=\"platform__top-left\">\n            <p className=\"platform__name platform__name--green section_name\">\n              PAXFORM BLOG\n            </p>\n            <h2 className=\"platform__title section_title\">\n              Latest Blog’s from Paxform.\n            </h2>\n          </div>\n          <div className=\"platform__top-right\">\n            <Button type=\"outline arrow\" text=\"See All Blog Post\" />\n          </div>\n        </div>\n        <div className=\"platform__content\">\n          {blogs.map((blog, index) => (\n            <RelatedCard\n              key={index}\n              data={blog}\n              readLink={true}\n              background=\"dark\"\n              term=\"blogs\"\n              loading={loading}\n            />\n          ))}\n        </div>\n      </div>\n      <div\n        className={`bottom_triangle bottom_triangle--${triangleColor}`}\n      ></div>\n    </section>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./ReadArticle.scss\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as ArrowRight } from \"../../assets/images/arrow-right.svg\";\nexport default class ReadArticle extends Component {\n  render() {\n    return (\n      <Link className=\"read_article\" to={this.props.to}>\n        <span>Read Article</span>\n        <ArrowRight className=\"read_article__arrow\"/>\n      </Link>\n    );\n  }\n}\n","import Skeleton from \"react-loading-skeleton\";\nimport ReadArticle from \"../ReadArticle/ReadArticle\";\nimport \"./RelatedCard.scss\";\n\nconst RelatedCard = ({ data, readLink, className, loading, term , background}) => {\n  const parser = new DOMParser();\n\n  const category = data ? (\n    data?.resourceCategories?.nodes[0]?.name\n  ) : (\n    <Skeleton width={\"50%\"} />\n  );\n  const title = data ? data?.title : <Skeleton count={2} />;\n  const slug = data?.slug;\n  const description = data ? (\n    parser\n      .parseFromString(data?.content, \"text/html\")\n      .getElementsByTagName(\"p\")[0]?.innerText\n  ) : (\n    <Skeleton count={3} />\n  );\n  const image = data?.featuredImage?.node?.sourceUrl;\n\n  const to = `/${term}/${slug}`;\n\n  const readArticle = !loading ? (\n    <ReadArticle to={to} />\n  ) : (\n    <Skeleton width={\"75%\"} />\n  );\n\n  const titleVariant = background  ? `related_card__title--${background}` : ''\n  return (\n    <div className=\"related_card\">\n      <div className=\"related_card__top\">\n        {image ? (\n          <div className={`${className ? className : \"\"} related_card__image`}>\n            <img src={image} alt=\"first story\" />\n          </div>\n        ) : (\n          <Skeleton height={180} style={{ borderRadius: \"20px\" }} />\n        )}\n\n        {category ? <p className=\"related_card__category\">{category}</p> : \"\"}\n\n        {title ? (\n          <h2 className={`related_card__title ${titleVariant}`}>\n            <a className=\"related_card__title-link\" href={to}>{title}</a>\n          </h2>\n        ) : (\n          \"\"\n        )}\n        {description ? (\n          <p className=\"related_card__description\">{description}</p>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"related_card__bottom\">{readLink ? readArticle : \"\"}</div>\n    </div>\n  );\n};\n\nexport default RelatedCard;\n","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\n// import card1 from \"../../assets/images/card-resource-1.png\";\nimport Button from \"../Button/Button\";\nimport \"./ResourceCard.scss\";\n\nexport default function ResourceCard(props) {\n  const variant = props.variant ? `resource_card__image--${props.variant}` : \"\";\n  const background = props.background\n    ? `resource_card--${props.background}`\n    : \"\";\n\n  const loading = props.loading;\n\n  const resource = props.data;\n\n  const title = resource?.title ? resource?.title : <Skeleton count={2} />;\n  const imageUrl = resource?.featuredImage?.node?.sourceUrl;\n  const slug = resource?.slug;\n\n  return (\n    <div className={`resource_card ${background}`}>\n      <div className=\"resource_card__image-box\">\n        {imageUrl ? (\n          <img\n            src={imageUrl}\n            alt=\"card1\"\n            className={`resource_card__image ${variant}`}\n          />\n        ) : (\n          <Skeleton height={props.variant === \"longer\" ? 200 : 150} />\n        )}\n        <h3 className=\"resource_card__title\">\n          <a className=\"resource_card__title-link\" href={`/resources/${slug}`}>\n            {title}\n          </a>\n        </h3>\n      </div>\n      <div className=\"resource_card__content\">\n        {!loading ? (\n          <Button\n            type=\"arrow outline\"\n            color=\"green\"\n            text=\"Read More\"\n            href={`/resources/${slug}`}\n          />\n        ) : (\n          <Skeleton height={40} style={{ borderRadius: \"25px\" }} />\n        )}\n      </div>\n    </div>\n  );\n}\n","var _path, _path2, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgShapeheader(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    preserveAspectRatio: \"none\",\n    width: 1440,\n    height: 209,\n    viewBox: \"0 0 1440 209\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M546 21.7718C546 10.058 556.022 0.851702 567.694 1.84363L1502 81.2455V199.5L546 110.638V21.7718Z\",\n    fill: \"#DEF6EC\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M-231 45L546.5 110V186.3C546.5 198.08 536.369 207.308 524.64 206.213L-231 135.638V45Z\",\n    fill: \"url(#paint0_linear_99_18811)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_99_18811\",\n    x1: 521.5,\n    y1: 89,\n    x2: 8.1257,\n    y2: 447.018,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0A61B4\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#074581\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgShapeheader);\nexport default __webpack_public_path__ + \"static/media/Shape header.f1766c99f3129c1b98effbf183f2b622.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Fragment, useState } from \"react\";\nimport ResourceCard from \"../../components/ResourceCard/ResourceCard\";\nimport \"./Resources.scss\";\n\n// import graphic from \"../../assets/images/Graphics.svg\";\nimport RelatedCard from \"../../components/RelatedCard/RelatedCard\";\n\n// import card1 from \"../../assets/images/card1.png\";\n// import card2 from \"../../assets/images/card2.png\";\n// import card3 from \"../../assets/images/card3.png\";\nimport Button from \"../../components/Button/Button\";\n\nimport shapeHeader from \"../../assets/images/Resources/Shape header.svg\";\nimport ReadyGet from \"../../components/ReadyGet/ReadyGet\";\nimport LatestBlogs from \"../../components/LatestBlogs/LatestBlogs\";\nimport { useQuery } from \"@apollo/client\";\n\nimport {\n  GET_FIRST_TWO_RESOURCES,\n  GET_RESOURCES,\n  GET_RESOURCES_BY_CATEGORY,\n  GET_RESOURCES_CATEGORIES,\n} from \"../../lib/graphqlQuery\";\nimport Skeleton from \"react-loading-skeleton\";\n\nexport default function Resources() {\n  const [chip, setChip] = useState(\"all\");\n\n  const { loading, data } = useQuery(GET_FIRST_TWO_RESOURCES);\n\n  const twoResources = !loading\n    ? data?.resources?.nodes\n    : Array.from({ length: 2 });\n\n  const endCursor = data?.resources?.pageInfo?.endCursor;\n\n  const loadChip = (chip) => {\n    setChip(chip);\n  };\n\n  return (\n    <main className=\"resources\">\n      <section className=\"hero\" background=\"light\">\n        <div className=\"container hero__wrapper\">\n          <div className=\"hero__articles\">\n            <div className=\"hero__articles-wrapper\">\n              <div className=\"hero__articles-group\">\n                {twoResources.map((resource, index) => (\n                  <ResourceCard\n                    loading={loading}\n                    data={resource}\n                    variant={index === 1 ? \"longer\" : \"\"}\n                    key={index}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n          <div className=\"hero__content\">\n            <p className=\"hero__name section_name\">Paxform Resources</p>\n            <h1 className=\"hero__title\">Guides and resources</h1>\n            <p className=\"hero__description\">\n              Paxform will never share your data with anyone. What’s more, no\n              one at Paxform can view or access your information.\n            </p>\n            <Button\n              type=\"flat-green arrow\"\n              color=\"white\"\n              text=\"See all Resources\"\n            />\n          </div>\n        </div>\n        <div className=\"hero__background\">\n          <img\n            className=\"hero__background-image\"\n            src={shapeHeader}\n            alt=\"\"\n            aria-hidden=\"true\"\n          />\n        </div>\n      </section>\n\n      <section className=\"business_insight\">\n        <div className=\"container\">\n          <div className=\"business_insight__wrapper\">\n            <div className=\"business_insight__top\">\n              <div className=\"business_insight__highlight\">\n                <p className=\"section_name business_insight__name\">\n                  BUSINESS INSIGHT HIGHLIGHT\n                </p>\n                <h1 className=\"section_title business_insight__title\">\n                  Latest Business Insight Highlight\n                </h1>\n              </div>\n              <div className=\"business_insight__button\">\n                <Button type=\"outline arrow\" text=\"See all\" color=\"green\" />\n              </div>\n            </div>\n\n            <FourResources slug=\"industry\" endCursor={endCursor} />\n          </div>\n        </div>\n        <div className=\"bottom_triangle bottom_triangle--secondary\"></div>\n      </section>\n\n      <section className=\"insight_update\">\n        <div className=\"container\">\n          <div className=\"insight_update__wrapper\">\n            <h1 className=\"insight_update__title section_title\">\n              Business Insight and Industry Updates\n            </h1>\n            <UpdateRadios loadChip={loadChip} />\n\n            <LatestUpdates chip={chip} endCursor={endCursor} />\n          </div>\n        </div>\n        <div className=\"bottom_triangle bottom_triangle--white\"></div>\n      </section>\n\n      <section className=\"latest_update\">\n        <div className=\"container\">\n          <div className=\"latest_update__wrapper\">\n            <div className=\"latest_update__top\">\n              <div className=\"latest_update__highlight\">\n                <p className=\"latest_update__name section_name\">\n                  INDUSTRY UPDATES HIGHLIGHT\n                </p>\n                <h1 className=\"latest_update__title section_title\">\n                  Latest Industry Updates Highlight\n                </h1>\n              </div>\n              <div className=\"latest_update__button\">\n                <Button type=\"outline arrow\" color=\"green\" text=\"See all\" />\n              </div>\n            </div>\n\n            <FourResources slug=\"business\" endCursor={endCursor} />\n          </div>\n        </div>\n\n        <div className=\"bottom_triangle bottom_triangle--dark-blue\"></div>\n      </section>\n\n      <LatestBlogs triangleColor={\"white\"} />\n\n      <ReadyGet />\n    </main>\n  );\n}\n\nconst FourResources = ({ slug, endCursor }) => {\n  const { loading, data } = useQuery(GET_RESOURCES_BY_CATEGORY, {\n    variables: {\n      cursor: endCursor,\n      id: slug,\n    },\n  });\n\n  const resources = !loading\n    ? data?.resourceCategory?.resources?.nodes\n    : Array.from({ length: 4 });\n  return (\n    <div className=\"business_insight__grid\">\n      {resources.map((resource, index) => (\n        <ResourceCard\n          key={index}\n          loading={loading}\n          data={resource}\n          background=\"greyish-blue\"\n        />\n      ))}\n    </div>\n  );\n};\n\nconst LatestUpdates = ({ chip, endCursor }) => {\n  const { loading, data } = useQuery(GET_RESOURCES, {\n    variables: {\n      first: 8,\n      cursor: endCursor,\n    },\n  });\n\n  const resources = !loading\n    ? [...data?.resources?.nodes]\n    : Array.from({ length: 8 });\n\n  let filteredResources = resources;\n\n  if (!loading && chip !== \"all\") {\n    filteredResources = resources.filter((resource) => {\n      const resourceCategories = resource?.resourceCategories?.nodes.map(\n        (node) => node.slug\n      );\n      return resourceCategories.includes(chip);\n    });\n  }\n\n  return (\n    <div className=\"insight_update__grid\">\n      {filteredResources.map((resource, index) => (\n        <RelatedCard\n          key={index}\n          data={resource}\n          readLink={true}\n          loading={loading}\n          term='resources'\n        />\n      ))}\n    </div>\n  );\n};\n\nconst UpdateRadios = ({ loadChip }) => {\n  const [chip, setChip] = useState(\"all\");\n\n  const handleRadioChange = (event) => {\n    loadChip(event.target.id);\n    setChip(event.target.id);\n  };\n\n  const { loading, data } = useQuery(GET_RESOURCES_CATEGORIES);\n\n  const resourceCategories = !loading\n    ? data?.resourceCategories?.nodes.filter((node) => node.count > 0)\n    : Array.from({ length: 3 });\n  return (\n    <div className=\"insight_update__radios\">\n      {!loading ? (\n        <Fragment>\n          <div className=\"chip\">\n            <input\n              id=\"all\"\n              type=\"radio\"\n              name=\"radio\"\n              onChange={handleRadioChange}\n              checked={chip === \"all\"}\n            />\n            <label htmlFor=\"all\">All</label>\n          </div>\n          {resourceCategories.map((category, index) => (\n            <div className=\"chip\" key={index}>\n              <input\n                id={category.slug}\n                type=\"radio\"\n                name=\"radio\"\n                onChange={handleRadioChange}\n                checked={chip === category.slug}\n              />\n              <label htmlFor={category.slug}>{category.name}</label>\n            </div>\n          ))}\n        </Fragment>\n      ) : (\n        resourceCategories.map((_category, index) => (\n          <Skeleton\n            key={index}\n            className=\"chip\"\n            height={40}\n            width={100}\n            style={{ borderRadius: \"20px\" }}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n"],"names":["LatestBlogs","_ref","_data$posts","triangleColor","_useQuery","useQuery","GET_BLOGS","variables","first","loading","data","blogs","Array","from","length","posts","nodes","_jsxs","className","children","_jsx","Button","type","text","map","blog","index","RelatedCard","readLink","background","term","concat","ReadArticle","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","Link","to","this","props","ArrowRight","Component","_data$resourceCategor","_data$resourceCategor2","_parser$parseFromStri","_data$featuredImage","_data$featuredImage$n","parser","DOMParser","category","resourceCategories","name","Skeleton","width","title","count","slug","description","parseFromString","content","getElementsByTagName","innerText","image","featuredImage","node","sourceUrl","readArticle","titleVariant","src","alt","height","style","borderRadius","href","ResourceCard","_resource$featuredIma","_resource$featuredIma2","variant","resource","imageUrl","color","Resources","_data$resources","_data$resources2","_data$resources2$page","_useState","useState","_useState2","_slicedToArray","chip","setChip","GET_FIRST_TWO_RESOURCES","twoResources","resources","endCursor","pageInfo","shapeHeader","FourResources","UpdateRadios","loadChip","LatestUpdates","ReadyGet","_useQuery2","GET_RESOURCES_BY_CATEGORY","cursor","id","resourceCategory","_ref2","_data$resources3","_useQuery3","GET_RESOURCES","_toConsumableArray","filteredResources","filter","_resource$resourceCat","includes","_ref3","_data$resourceCategor3","_useState3","_useState4","handleRadioChange","event","target","_useQuery4","GET_RESOURCES_CATEGORIES","_category","Fragment","onChange","checked","htmlFor"],"sourceRoot":""}